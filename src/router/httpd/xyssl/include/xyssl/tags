!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
ASN1_BIT_STRING	x509.h	51;"	d
ASN1_BMP_STRING	x509.h	63;"	d
ASN1_BOOLEAN	x509.h	49;"	d
ASN1_CONSTRUCTED	x509.h	65;"	d
ASN1_CONTEXT_SPECIFIC	x509.h	66;"	d
ASN1_HASH_MDX	rsa.h	41;"	d
ASN1_HASH_SHA1	rsa.h	45;"	d
ASN1_IA5_STRING	x509.h	60;"	d
ASN1_INTEGER	x509.h	50;"	d
ASN1_NULL	x509.h	53;"	d
ASN1_OCTET_STRING	x509.h	52;"	d
ASN1_OID	x509.h	54;"	d
ASN1_PRIMITIVE	x509.h	64;"	d
ASN1_PRINTABLE_STRING	x509.h	58;"	d
ASN1_SEQUENCE	x509.h	56;"	d
ASN1_SET	x509.h	57;"	d
ASN1_T61_STRING	x509.h	59;"	d
ASN1_UNIVERSAL_STRING	x509.h	62;"	d
ASN1_UTC_TIME	x509.h	61;"	d
ASN1_UTF8_STRING	x509.h	55;"	d
BADCERT_CN_MISMATCH	x509.h	43;"	d
BADCERT_HAS_EXPIRED	x509.h	42;"	d
BADCERT_NOT_TRUSTED	x509.h	44;"	d
CHK	bignum.h	19;"	d
COLLECT_SIZE	havege.h	11;"	d
D	rsa.h	/^    mpi D;      \/*!<  private exponent  *\/$/;"	m
DP	rsa.h	/^    mpi DP;     \/*!<  D mod (P - 1)     *\/$/;"	m
DQ	rsa.h	/^    mpi DQ;     \/*!<  D mod (Q - 1)     *\/$/;"	m
E	rsa.h	/^    mpi E;      \/*!<  public exponent   *\/$/;"	m
ERR_ASN1_INVALID_DATA	x509.h	17;"	d
ERR_ASN1_INVALID_LENGTH	x509.h	15;"	d
ERR_ASN1_LENGTH_MISMATCH	x509.h	16;"	d
ERR_ASN1_OUT_OF_DATA	x509.h	13;"	d
ERR_ASN1_UNEXPECTED_TAG	x509.h	14;"	d
ERR_BASE64_BUFFER_TOO_SMALL	base64.h	11;"	d
ERR_BASE64_INVALID_CHARACTER	base64.h	12;"	d
ERR_DHM_CALC_SECRET_FAILED	dhm.h	15;"	d
ERR_DHM_MAKE_PARAMS_FAILED	dhm.h	12;"	d
ERR_DHM_MAKE_PUBLIC_FAILED	dhm.h	14;"	d
ERR_DHM_READ_PARAMS_FAILED	dhm.h	11;"	d
ERR_DHM_READ_PUBLIC_FAILED	dhm.h	13;"	d
ERR_MPI_BUFFER_TOO_SMALL	bignum.h	13;"	d
ERR_MPI_DIVISION_BY_ZERO	bignum.h	15;"	d
ERR_MPI_INVALID_CHARACTER	bignum.h	11;"	d
ERR_MPI_INVALID_PARAMETER	bignum.h	12;"	d
ERR_MPI_IS_COMPOSITE	bignum.h	17;"	d
ERR_MPI_NEGATIVE_VALUE	bignum.h	14;"	d
ERR_MPI_NOT_INVERTIBLE	bignum.h	16;"	d
ERR_NET_ACCEPT_FAILED	net.h	16;"	d
ERR_NET_BIND_FAILED	net.h	14;"	d
ERR_NET_CONNECT_FAILED	net.h	13;"	d
ERR_NET_CONN_RESET	net.h	19;"	d
ERR_NET_LISTEN_FAILED	net.h	15;"	d
ERR_NET_RECV_FAILED	net.h	17;"	d
ERR_NET_SEND_FAILED	net.h	18;"	d
ERR_NET_SOCKET_FAILED	net.h	12;"	d
ERR_NET_UNKNOWN_HOST	net.h	11;"	d
ERR_NET_WOULD_BLOCK	net.h	20;"	d
ERR_RSA_DECRYPT_FAILED	rsa.h	16;"	d
ERR_RSA_ENCRYPT_FAILED	rsa.h	15;"	d
ERR_RSA_KEYGEN_FAILED	rsa.h	11;"	d
ERR_RSA_KEY_CHECK_FAILED	rsa.h	14;"	d
ERR_RSA_PRIVATE_FAILED	rsa.h	13;"	d
ERR_RSA_PUBLIC_FAILED	rsa.h	12;"	d
ERR_RSA_SIGN_FAILED	rsa.h	17;"	d
ERR_RSA_VERIFY_FAILED	rsa.h	18;"	d
ERR_SSL_BAD_HS_CERTIFICATE	ssl.h	28;"	d
ERR_SSL_BAD_HS_CERTIFICATE_REQUEST	ssl.h	29;"	d
ERR_SSL_BAD_HS_CERTIFICATE_VERIFY	ssl.h	33;"	d
ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC	ssl.h	34;"	d
ERR_SSL_BAD_HS_CLIENT_HELLO	ssl.h	26;"	d
ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE	ssl.h	32;"	d
ERR_SSL_BAD_HS_FINISHED	ssl.h	35;"	d
ERR_SSL_BAD_HS_SERVER_HELLO	ssl.h	27;"	d
ERR_SSL_BAD_HS_SERVER_HELLO_DONE	ssl.h	31;"	d
ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE	ssl.h	30;"	d
ERR_SSL_CA_CHAIN_REQUIRED	ssl.h	21;"	d
ERR_SSL_CERTIFICATE_REQUIRED	ssl.h	19;"	d
ERR_SSL_CERTIFICATE_TOO_LARGE	ssl.h	18;"	d
ERR_SSL_FATAL_ALERT_MESSAGE	ssl.h	23;"	d
ERR_SSL_INVALID_MAC	ssl.h	11;"	d
ERR_SSL_INVALID_MODULUS_SIZE	ssl.h	13;"	d
ERR_SSL_INVALID_RECORD	ssl.h	12;"	d
ERR_SSL_NO_CIPHER_CHOSEN	ssl.h	15;"	d
ERR_SSL_NO_CLIENT_CERTIFICATE	ssl.h	17;"	d
ERR_SSL_NO_SESSION_FOUND	ssl.h	16;"	d
ERR_SSL_PEER_CLOSE_NOTIFY	ssl.h	25;"	d
ERR_SSL_PEER_VERIFY_FAILED	ssl.h	24;"	d
ERR_SSL_PRIVATE_KEY_REQUIRED	ssl.h	20;"	d
ERR_SSL_UNEXPECTED_MESSAGE	ssl.h	22;"	d
ERR_SSL_UNKNOWN_CIPHER	ssl.h	14;"	d
ERR_X509_CERT_INVALID_ALG	x509.h	23;"	d
ERR_X509_CERT_INVALID_DATE	x509.h	25;"	d
ERR_X509_CERT_INVALID_EXTENSIONS	x509.h	28;"	d
ERR_X509_CERT_INVALID_FORMAT	x509.h	20;"	d
ERR_X509_CERT_INVALID_NAME	x509.h	24;"	d
ERR_X509_CERT_INVALID_PEM	x509.h	19;"	d
ERR_X509_CERT_INVALID_PUBKEY	x509.h	26;"	d
ERR_X509_CERT_INVALID_SERIAL	x509.h	22;"	d
ERR_X509_CERT_INVALID_SIGNATURE	x509.h	27;"	d
ERR_X509_CERT_INVALID_VERSION	x509.h	21;"	d
ERR_X509_CERT_SIG_MISMATCH	x509.h	32;"	d
ERR_X509_CERT_UNKNOWN_PK_ALG	x509.h	31;"	d
ERR_X509_CERT_UNKNOWN_SIG_ALG	x509.h	30;"	d
ERR_X509_CERT_UNKNOWN_VERSION	x509.h	29;"	d
ERR_X509_KEY_INVALID_ENC_IV	x509.h	36;"	d
ERR_X509_KEY_INVALID_FORMAT	x509.h	35;"	d
ERR_X509_KEY_INVALID_PEM	x509.h	33;"	d
ERR_X509_KEY_INVALID_VERSION	x509.h	34;"	d
ERR_X509_KEY_PASSWORD_MISMATCH	x509.h	39;"	d
ERR_X509_KEY_PASSWORD_REQUIRED	x509.h	38;"	d
ERR_X509_KEY_UNKNOWN_ENC_ALG	x509.h	37;"	d
ERR_X509_SIG_VERIFY_FAILED	x509.h	40;"	d
G	dhm.h	/^    mpi G;      \/*!<  generator         *\/$/;"	m
GX	dhm.h	/^    mpi GX;     \/*!<  self = G^X mod P  *\/$/;"	m
GY	dhm.h	/^    mpi GY;     \/*!<  peer = G^Y mod P  *\/$/;"	m
K	dhm.h	/^    mpi K;      \/*!<  key = GY^X mod P  *\/$/;"	m
N	rsa.h	/^    mpi N;      \/*!<  public modulus    *\/$/;"	m
OID_PKCS1	x509.h	80;"	d
OID_PKCS1_RSA	x509.h	81;"	d
OID_PKCS9	x509.h	82;"	d
OID_X520	x509.h	79;"	d
P	dhm.h	/^    mpi P;      \/*!<  prime modulus     *\/$/;"	m
P	rsa.h	/^    mpi P;      \/*!<  1st prime factor  *\/$/;"	m
PKCS9_EMAIL	x509.h	77;"	d
PT1	havege.h	/^    int PT1, PT2, offset;$/;"	m
PT2	havege.h	/^    int PT1, PT2, offset;$/;"	m
Q	rsa.h	/^    mpi Q;      \/*!<  2nd prime factor  *\/$/;"	m
QP	rsa.h	/^    mpi QP;     \/*!<  inverse of Q % P  *\/$/;"	m
RN	rsa.h	/^    mpi RN;     \/*!<  R^2 mod N         *\/$/;"	m
RP	dhm.h	/^    mpi RP;     \/*!<  recalc R*R mod P  *\/$/;"	m
RP	rsa.h	/^    mpi RP;     \/*!<  R^2 mod P         *\/$/;"	m
RQ	rsa.h	/^    mpi RQ;     \/*!<  R^2 mod Q         *\/$/;"	m
RSA_CRYPT	rsa.h	30;"	d
RSA_MD2	rsa.h	24;"	d
RSA_MD4	rsa.h	25;"	d
RSA_MD5	rsa.h	26;"	d
RSA_NONE	rsa.h	23;"	d
RSA_SHA1	rsa.h	27;"	d
RSA_SIGN	rsa.h	29;"	d
SSL3_EDH_RSA_DES_168_SHA	ssl.h	69;"	d
SSL3_RSA_DES_168_SHA	ssl.h	68;"	d
SSL3_RSA_RC4_128_MD5	ssl.h	66;"	d
SSL3_RSA_RC4_128_SHA	ssl.h	67;"	d
SSLV3_MAJOR_VERSION	ssl.h	40;"	d
SSLV3_MINOR_VERSION	ssl.h	41;"	d
SSL_ALERT_CLOSE_NOTIFY	ssl.h	83;"	d
SSL_ALERT_FATAL	ssl.h	85;"	d
SSL_ALERT_NO_CERTIFICATE	ssl.h	86;"	d
SSL_ALERT_WARNING	ssl.h	84;"	d
SSL_BUFFER_LEN	ssl.h	61;"	d
SSL_CERTIFICATE_REQUEST	ssl.h	/^    SSL_CERTIFICATE_REQUEST,$/;"	e
SSL_CERTIFICATE_VERIFY	ssl.h	/^    SSL_CERTIFICATE_VERIFY,$/;"	e
SSL_CLIENT_CERTIFICATE	ssl.h	/^    SSL_CLIENT_CERTIFICATE,$/;"	e
SSL_CLIENT_CHANGE_CIPHER_SPEC	ssl.h	/^    SSL_CLIENT_CHANGE_CIPHER_SPEC,$/;"	e
SSL_CLIENT_FINISHED	ssl.h	/^    SSL_CLIENT_FINISHED,$/;"	e
SSL_CLIENT_HELLO	ssl.h	/^    SSL_CLIENT_HELLO,$/;"	e
SSL_CLIENT_KEY_EXCHANGE	ssl.h	/^    SSL_CLIENT_KEY_EXCHANGE,$/;"	e
SSL_COMPRESS_NULL	ssl.h	47;"	d
SSL_EXPIRATION_TIME	ssl.h	55;"	d
SSL_HANDSHAKE_OVER	ssl.h	/^    SSL_HANDSHAKE_OVER$/;"	e
SSL_HELLO_REQUEST	ssl.h	/^    SSL_HELLO_REQUEST,$/;"	e
SSL_HS_CERTIFICATE	ssl.h	91;"	d
SSL_HS_CERTIFICATE_REQUEST	ssl.h	93;"	d
SSL_HS_CERTIFICATE_VERIFY	ssl.h	95;"	d
SSL_HS_CLIENT_HELLO	ssl.h	89;"	d
SSL_HS_CLIENT_KEY_EXCHANGE	ssl.h	96;"	d
SSL_HS_FINISHED	ssl.h	97;"	d
SSL_HS_HELLO_REQUEST	ssl.h	88;"	d
SSL_HS_SERVER_HELLO	ssl.h	90;"	d
SSL_HS_SERVER_HELLO_DONE	ssl.h	94;"	d
SSL_HS_SERVER_KEY_EXCHANGE	ssl.h	92;"	d
SSL_IS_CLIENT	ssl.h	45;"	d
SSL_IS_SERVER	ssl.h	46;"	d
SSL_MAX_CONTENT_LEN	ssl.h	54;"	d
SSL_MSG_ALERT	ssl.h	79;"	d
SSL_MSG_APPLICATION_DATA	ssl.h	81;"	d
SSL_MSG_CHANGE_CIPHER_SPEC	ssl.h	78;"	d
SSL_MSG_HANDSHAKE	ssl.h	80;"	d
SSL_SERVER_CERTIFICATE	ssl.h	/^    SSL_SERVER_CERTIFICATE,$/;"	e
SSL_SERVER_CHANGE_CIPHER_SPEC	ssl.h	/^    SSL_SERVER_CHANGE_CIPHER_SPEC,$/;"	e
SSL_SERVER_FINISHED	ssl.h	/^    SSL_SERVER_FINISHED,$/;"	e
SSL_SERVER_HELLO	ssl.h	/^    SSL_SERVER_HELLO,$/;"	e
SSL_SERVER_HELLO_DONE	ssl.h	/^    SSL_SERVER_HELLO_DONE,$/;"	e
SSL_SERVER_KEY_EXCHANGE	ssl.h	/^    SSL_SERVER_KEY_EXCHANGE,$/;"	e
SSL_SESSION_TBL_LEN	ssl.h	53;"	d
SSL_VERIFY_NONE	ssl.h	49;"	d
SSL_VERIFY_OPTIONAL	ssl.h	50;"	d
SSL_VERIFY_REQUIRED	ssl.h	51;"	d
TLS10_MINOR_VERSION	ssl.h	42;"	d
TLS11_MINOR_VERSION	ssl.h	43;"	d
TLS1_EDH_RSA_AES_256_SHA	ssl.h	71;"	d
TLS1_RSA_AES_256_SHA	ssl.h	70;"	d
WALK	havege.h	/^    int WALK[8192];$/;"	m
X	dhm.h	/^    mpi X;      \/*!<  secret value      *\/$/;"	m
X520_COMMON_NAME	x509.h	71;"	d
X520_COUNTRY	x509.h	72;"	d
X520_LOCALITY	x509.h	73;"	d
X520_ORGANIZATION	x509.h	75;"	d
X520_ORG_UNIT	x509.h	76;"	d
X520_STATE	x509.h	74;"	d
_AES_H	aes.h	5;"	d
_ARC4_H	arc4.h	5;"	d
_BASE64_H	base64.h	5;"	d
_BIGNUM_H	bignum.h	5;"	d
_CERTS_H	certs.h	5;"	d
_DES_H	des.h	5;"	d
_DHM_H	dhm.h	5;"	d
_HAVEGE_H	havege.h	5;"	d
_MD2_H	md2.h	5;"	d
_MD4_H	md4.h	5;"	d
_MD5_H	md5.h	5;"	d
_NET_H	net.h	5;"	d
_RSA_H	rsa.h	5;"	d
_SHA1_H	sha1.h	5;"	d
_SHA2_H	sha2.h	5;"	d
_SSL_H	ssl.h	5;"	d
_TIMING_H	timing.h	5;"	d
_X509_H	x509.h	5;"	d
_x509_buf	x509.h	/^typedef struct _x509_buf$/;"	s
_x509_cert	x509.h	/^typedef struct _x509_cert$/;"	s
_x509_name	x509.h	/^typedef struct _x509_name$/;"	s
_x509_time	x509.h	/^typedef struct _x509_time$/;"	s
aes_context	aes.h	/^aes_context;$/;"	t
arc4_context	arc4.h	/^arc4_context;$/;"	t
authmode	ssl.h	/^    int authmode;                       \/*!<  verification mode       *\/$/;"	m
buffer	md2.h	/^    unsigned char buffer[16];   \/*!< data block being processed *\/$/;"	m
buffer	md4.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m
buffer	md5.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m
buffer	sha1.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m
buffer	sha2.h	/^    unsigned char buffer[64];   \/*!< data block being processed *\/$/;"	m
ca_chain	ssl.h	/^    x509_cert *ca_chain;                \/*!<  own trusted CA chain    *\/$/;"	m
ca_istrue	x509.h	/^    int ca_istrue;$/;"	m	struct:_x509_cert
cipher	ssl.h	/^    int cipher;                         \/*!<  current chosen cipher   *\/$/;"	m
cipherlist	ssl.h	/^    int *cipherlist;                    \/*!<  accepted ciphersuites   *\/$/;"	m
cksum	md2.h	/^    unsigned char cksum[16];    \/*!< checksum of the data block *\/$/;"	m
client_auth	ssl.h	/^    int client_auth;                    \/*!<  flag for client auth.   *\/$/;"	m
ctx_dec	ssl.h	/^    void *ctx_dec;                      \/*!<  decryption context      *\/$/;"	m
ctx_enc	ssl.h	/^    void *ctx_enc;                      \/*!<  encryption context      *\/$/;"	m
ctxlen	ssl.h	/^    int ctxlen;                         \/*!<  cipher context length   *\/$/;"	m
day	x509.h	/^    int year, mon, day;$/;"	m	struct:_x509_time
des3_context	des.h	/^des3_context;$/;"	t
des_context	des.h	/^des_context;$/;"	t
dhm_G	ssl.h	/^    char *dhm_G;                        \/*!<  DHM generator (server)  *\/$/;"	m
dhm_P	ssl.h	/^    char *dhm_P;                        \/*!<  DHM modulus   (server)  *\/$/;"	m
dhm_context	dhm.h	/^dhm_context;$/;"	t
dhm_ctx	ssl.h	/^    dhm_context dhm_ctx;                \/*!<  DHM key exchange        *\/$/;"	m
drk	aes.h	/^    unsigned long drk[64];     \/*!< decryption round keys *\/$/;"	m
dsk	des.h	/^    unsigned long dsk[32];     \/*!< DES decryption subkeys *\/$/;"	m
dsk	des.h	/^    unsigned long dsk[96];     \/*!< Triple-DES decryption subkeys *\/$/;"	m
endpoint	ssl.h	/^    int endpoint;                       \/*!<  0: client, 1: server    *\/$/;"	m
erk	aes.h	/^    unsigned long erk[64];     \/*!< encryption round keys *\/$/;"	m
esk	des.h	/^    unsigned long esk[32];     \/*!< DES encryption subkeys *\/$/;"	m
esk	des.h	/^    unsigned long esk[96];     \/*!< Triple-DES encryption subkeys *\/$/;"	m
havege_state	havege.h	/^havege_state;$/;"	t
hour	x509.h	/^    int hour, min, sec;$/;"	m	struct:_x509_time
hr_time	timing.h	/^struct hr_time$/;"	s
hs_md5	ssl.h	/^     md5_context hs_md5;                \/*!<   MD5( Handshake msgs )  *\/$/;"	m
hs_sha1	ssl.h	/^    sha1_context hs_sha1;               \/*!<  SHA1( Handshake msgs )  *\/$/;"	m
in_ctr	ssl.h	/^    unsigned char *in_ctr;      \/*!< 64-bit incoming message counter  *\/$/;"	m
in_hdr	ssl.h	/^    unsigned char *in_hdr;      \/*!< 5-byte record header (in_ctr+8)  *\/$/;"	m
in_hslen	ssl.h	/^    int in_hslen;               \/*!< current handshake message length *\/$/;"	m
in_left	ssl.h	/^    int in_left;                \/*!< amount of data read so far       *\/$/;"	m
in_msg	ssl.h	/^    unsigned char *in_msg;      \/*!< the message payload  (in_hdr+5)  *\/$/;"	m
in_msglen	ssl.h	/^    int in_msglen;              \/*!< record header: message length    *\/$/;"	m
in_msgtype	ssl.h	/^    int in_msgtype;             \/*!< record header: message type      *\/$/;"	m
issuer	x509.h	/^    x509_name issuer;$/;"	m	struct:_x509_cert
issuer_id	x509.h	/^    x509_buf issuer_id;$/;"	m	struct:_x509_cert
issuer_raw	x509.h	/^    x509_buf issuer_raw;$/;"	m	struct:_x509_cert
iv_dec	ssl.h	/^    unsigned char iv_dec[16];           \/*!<  IV (decryption)         *\/$/;"	m
iv_enc	ssl.h	/^    unsigned char iv_enc[16];           \/*!<  IV (encryption)         *\/$/;"	m
ivlen	ssl.h	/^    int ivlen;                          \/*!<  IV length               *\/$/;"	m
keylen	ssl.h	/^    int keylen;                         \/*!<  symmetric key length    *\/$/;"	m
left	md2.h	/^    int left;                   \/*!< amount of data in buffer   *\/$/;"	m
len	dhm.h	/^    int len;    \/*!<  size(P) in chars  *\/$/;"	m
len	rsa.h	/^    int len;    \/*!<  size(N) in chars  *\/$/;"	m
len	x509.h	/^    int len;$/;"	m	struct:_x509_buf
m	arc4.h	/^    int m[256];         \/*!< permutation table *\/$/;"	m
mac_dec	ssl.h	/^    unsigned char mac_dec[32];          \/*!<  MAC (decryption)        *\/$/;"	m
mac_enc	ssl.h	/^    unsigned char mac_enc[32];          \/*!<  MAC (encryption)        *\/$/;"	m
maclen	ssl.h	/^    int maclen;                         \/*!<  MAC length              *\/$/;"	m
major_ver	ssl.h	/^    int major_ver;              \/*!< equal to  SSLV3_MAJOR_VERSION    *\/$/;"	m
master	ssl.h	/^    unsigned char master[48];           \/*!<  master secret           *\/$/;"	m
max_pathlen	x509.h	/^    int max_pathlen;$/;"	m	struct:_x509_cert
max_ver	ssl.h	/^    unsigned char max_ver[2];   \/*!< max. version supported by client *\/$/;"	m
md2_context	md2.h	/^md2_context;$/;"	t
md4_context	md4.h	/^md4_context;$/;"	t
md5_context	md5.h	/^md5_context;$/;"	t
min	x509.h	/^    int hour, min, sec;$/;"	m	struct:_x509_time
minlen	ssl.h	/^    int minlen;                         \/*!<  min. ciphertext length  *\/$/;"	m
minor_ver	ssl.h	/^    int minor_ver;              \/*!< either 0: SSLv3, or 1: TLSv1.0   *\/$/;"	m
mon	x509.h	/^    int year, mon, day;$/;"	m	struct:_x509_time
mpi	bignum.h	/^mpi;$/;"	t
n	bignum.h	/^    int n;              \/*!<  total # of limbs  *\/$/;"	m
nb_zero	ssl.h	/^    int nb_zero;                \/*!< # of 0-length encrypted messages *\/$/;"	m
next	x509.h	/^    struct _x509_cert *next; $/;"	m	struct:_x509_cert
next	x509.h	/^    struct _x509_name *next;$/;"	m	struct:_x509_name
nr	aes.h	/^    int nr;                    \/*!< number of rounds      *\/$/;"	m
offset	havege.h	/^    int PT1, PT2, offset;$/;"	m
oid	x509.h	/^    x509_buf oid;$/;"	m	struct:_x509_name
opaque	timing.h	/^    unsigned char opaque[32];$/;"	m	struct:hr_time
out_ctr	ssl.h	/^    unsigned char *out_ctr;     \/*!< 64-bit outgoing message counter  *\/$/;"	m
out_hdr	ssl.h	/^    unsigned char *out_hdr;     \/*!< 5-byte record header (out_ctr+8) *\/$/;"	m
out_left	ssl.h	/^    int out_left;               \/*!< amount of data not yet written   *\/$/;"	m
out_msg	ssl.h	/^    unsigned char *out_msg;     \/*!< the message payload  (out_hdr+5) *\/$/;"	m
out_msglen	ssl.h	/^    int out_msglen;             \/*!< record header: message length    *\/$/;"	m
out_msgtype	ssl.h	/^    int out_msgtype;            \/*!< record header: message type      *\/$/;"	m
out_uoff	ssl.h	/^    int out_uoff;               \/*!< offset in user-supplied buffer   *\/$/;"	m
own_cert	ssl.h	/^    x509_cert *own_cert;                \/*!<  own X.509 certificate   *\/$/;"	m
own_key	ssl.h	/^    rsa_context *own_key;               \/*!<  own RSA private key     *\/$/;"	m
p	bignum.h	/^    t_int *p;           \/*!<  pointer to limbs  *\/$/;"	m
p	x509.h	/^    unsigned char *p;$/;"	m	struct:_x509_buf
peer_cert	ssl.h	/^    x509_cert *peer_cert;               \/*!<  peer X.509 cert chain   *\/$/;"	m
peer_cn	ssl.h	/^    char *peer_cn;                      \/*!<  expected peer CN        *\/$/;"	m
pk_oid	x509.h	/^    x509_buf pk_oid;$/;"	m	struct:_x509_cert
pmslen	ssl.h	/^    int pmslen;                         \/*!<  premaster length        *\/$/;"	m
pool	havege.h	/^    int pool[COLLECT_SIZE];$/;"	m
premaster	ssl.h	/^    unsigned char premaster[256];       \/*!<  premaster secret        *\/$/;"	m
randbytes	ssl.h	/^    unsigned char randbytes[64];        \/*!<  random bytes            *\/$/;"	m
raw	x509.h	/^    x509_buf raw;$/;"	m	struct:_x509_cert
read_fd	ssl.h	/^    int read_fd;                \/*!< descriptor for read operations   *\/$/;"	m
resumed	ssl.h	/^    int resumed;                        \/*!<  session resuming flag   *\/$/;"	m
rng_d	ssl.h	/^    void *rng_d;                        \/*!<  RNG data                *\/$/;"	m
rng_f	ssl.h	/^    int (*rng_f)(void *);               \/*!<  RNG function            *\/$/;"	m
rsa	x509.h	/^    rsa_context rsa;$/;"	m	struct:_x509_cert
rsa_context	rsa.h	/^rsa_context;$/;"	t
s	bignum.h	/^    int s;              \/*!<  integer sign      *\/$/;"	m
sec	x509.h	/^    int hour, min, sec;$/;"	m	struct:_x509_time
serial	x509.h	/^    x509_buf serial;$/;"	m	struct:_x509_cert
sessid	ssl.h	/^    unsigned char sessid[32];           \/*!<  session id              *\/$/;"	m
sha1_context	sha1.h	/^sha1_context;$/;"	t
sha2_context	sha2.h	/^sha2_context;$/;"	t
sidlen	ssl.h	/^    int sidlen;                         \/*!<  session id length       *\/$/;"	m
sidtable	ssl.h	/^    unsigned char *sidtable;            \/*!<  table of session IDs    *\/$/;"	m
sig	x509.h	/^    x509_buf sig;$/;"	m	struct:_x509_cert
sig_oid1	x509.h	/^    x509_buf sig_oid1;$/;"	m	struct:_x509_cert
sig_oid2	x509.h	/^    x509_buf sig_oid2;$/;"	m	struct:_x509_cert
ssl_context	ssl.h	/^ssl_context;$/;"	t
ssl_states	ssl.h	/^ssl_states;$/;"	t
state	md2.h	/^    unsigned char state[48];    \/*!< intermediate digest state  *\/$/;"	m
state	md4.h	/^    unsigned long state[4];     \/*!< intermediate digest state  *\/$/;"	m
state	md5.h	/^    unsigned long state[4];     \/*!< intermediate digest state  *\/$/;"	m
state	sha1.h	/^    unsigned long state[5];     \/*!< intermediate digest state  *\/$/;"	m
state	sha2.h	/^    unsigned long state[8];     \/*!< intermediate digest state  *\/$/;"	m
state	ssl.h	/^    int state;                  \/*!<  SSL handshake: current state    *\/$/;"	m
subject	x509.h	/^    x509_name subject;$/;"	m	struct:_x509_cert
subject_id	x509.h	/^    x509_buf subject_id;$/;"	m	struct:_x509_cert
subject_raw	x509.h	/^    x509_buf subject_raw;$/;"	m	struct:_x509_cert
t_dbl	bignum.h	/^      typedef unsigned int t_dbl __attribute__((mode(TI)));$/;"	t
t_dbl	bignum.h	/^      typedef unsigned long long t_dbl;$/;"	t
t_dbl	bignum.h	/^    typedef __int64 t_dbl;$/;"	t
t_dbl	bignum.h	/^typedef unsigned long t_dbl;$/;"	t
t_int	bignum.h	/^  typedef unsigned long t_int;$/;"	t
t_int	bignum.h	/^typedef unsigned int  t_int;$/;"	t
tag	x509.h	/^    int tag;$/;"	m	struct:_x509_buf
tbs	x509.h	/^    x509_buf tbs;$/;"	m	struct:_x509_cert
total	md4.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m
total	md5.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m
total	sha1.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m
total	sha2.h	/^    unsigned long total[2];     \/*!< number of bytes processed  *\/$/;"	m
v3_ext	x509.h	/^    x509_buf v3_ext;$/;"	m	struct:_x509_cert
val	x509.h	/^    x509_buf val;$/;"	m	struct:_x509_name
valid_from	x509.h	/^    x509_time valid_from;$/;"	m	struct:_x509_cert
valid_to	x509.h	/^    x509_time valid_to;$/;"	m	struct:_x509_cert
ver	rsa.h	/^    int ver;    \/*!<  should be 0       *\/$/;"	m
verify_result	ssl.h	/^    int verify_result;                  \/*!<  verification result     *\/$/;"	m
version	x509.h	/^    int version;$/;"	m	struct:_x509_cert
write_fd	ssl.h	/^    int write_fd;               \/*!< descriptor for write operations  *\/$/;"	m
x	arc4.h	/^    int x;              \/*!< permutation index *\/$/;"	m
x509_buf	x509.h	/^x509_buf;$/;"	t
x509_cert	x509.h	/^x509_cert;$/;"	t
x509_name	x509.h	/^x509_name;$/;"	t
x509_time	x509.h	/^x509_time;$/;"	t
y	arc4.h	/^    int y;              \/*!< permutation index *\/$/;"	m
year	x509.h	/^    int year, mon, day;$/;"	m	struct:_x509_time
