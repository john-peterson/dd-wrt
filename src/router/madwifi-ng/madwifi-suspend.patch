Index: ath/if_ath_pci.c
===================================================================
--- ath/if_ath_pci.c	(revision 1349)
+++ ath/if_ath_pci.c	(working copy)
@@ -154,7 +154,7 @@
 	pci_read_config_dword(pdev, 0x40, &val);
 	if ((val & 0x0000ff00) != 0)
 		pci_write_config_dword(pdev, 0x40, val & 0xffff00ff);
-
+        pci_set_power_state(pdev, PCI_D0);
 	phymem = pci_resource_start(pdev, 0);
 	if (!request_mem_region(phymem, pci_resource_len(pdev, 0), "ath")) {
 		printk(KERN_ERR "ath_pci: cannot reserve PCI memory region\n");
@@ -246,7 +246,7 @@
 	PCI_SAVE_STATE(pdev,
 		((struct ath_pci_softc *)dev->priv)->aps_pmstate);
 	pci_disable_device(pdev);
-	if (pci_set_power_state(pdev, 3)); /* XXX: what? */
+	pci_set_power_state(pdev, PCI_D3hot); /* XXX: what? */
 
 	return (0);
 }
@@ -256,13 +256,15 @@
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
 	u32 val;
+        pci_set_power_state(pdev, PCI_D0);
 
-	if (!pci_enable_device(pdev))
-		return 1;
 	/* XXX - Should this return nonzero on fail? */
 	PCI_RESTORE_STATE(pdev,
 		((struct ath_pci_softc *)dev->priv)->aps_pmstate);
-	/*
+     
+	pci_enable_device(pdev);
+        pci_set_master(pdev);
+        /*
 	 * Suspend/Resume resets the PCI configuration space, so we have to
 	 * re-disable the RETRY_TIMEOUT register (0x41) to keep
 	 * PCI Tx retries from interfering with C3 CPU state
Index: ath/if_ath.c
===================================================================
--- ath/if_ath.c	(revision 1349)
+++ ath/if_ath.c	(working copy)
@@ -1221,7 +1224,8 @@
 	struct ath_softc *sc = dev->priv;
 
 	DPRINTF(sc, ATH_DEBUG_ANY, "%s: flags %x\n", __func__, dev->flags);
-	ath_stop(dev);
+      	ath_hal_setpower(sc->sc_ah, HAL_PM_FULL_SLEEP);
+/*	ath_stop(dev);*/
 }
 
 void
@@ -1230,7 +1234,9 @@
 	struct ath_softc *sc = dev->priv;
 
 	DPRINTF(sc, ATH_DEBUG_ANY, "%s: flags %x\n", __func__, dev->flags);
-	ath_init(dev);
+   	ath_hal_setpower(sc->sc_ah, HAL_PM_AWAKE);
+	ath_reset(dev);
+/*	ath_init(dev);*/
 }
 
 void
@@ -1239,7 +1245,8 @@
 	struct ath_softc *sc = dev->priv;
 
 	DPRINTF(sc, ATH_DEBUG_ANY, "%s: flags %x\n", __func__, dev->flags);
-	ath_stop(dev);
+      	ath_hal_setpower(sc->sc_ah, HAL_PM_AWAKE);
+/*	ath_stop(dev);*/
 }
 
 static void
