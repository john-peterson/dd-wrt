diff -Nurb madwifi-ng/net80211/ieee80211_wireless.c madwifi-ng-working/net80211/ieee80211_wireless.c
--- madwifi-ng/net80211/ieee80211_wireless.c	2005-12-21 21:49:59.000000000 -0800
+++ madwifi-ng-working/net80211/ieee80211_wireless.c	2006-01-01 16:04:42.000000000 -0800
@@ -47,6 +47,7 @@
 #include <linux/netdevice.h>
 #include <linux/utsname.h>
 #include <linux/if_arp.h>		/* XXX for ARPHRD_ETHER */
+#include <linux/delay.h>
 #include <net/iw_handler.h>
 
 #if WIRELESS_EXT < 14
@@ -1283,6 +1284,39 @@
 	/* XXX always manual... */
 	IEEE80211_DPRINTF(vap, IEEE80211_MSG_SCAN,
 	    "%s: active scan request\n", __func__);
+	/* 
+	   Cancel any existing active scan, so that any new parameters
+	   in this scan ioctl (or the defaults) can be honored.
+	*/
+	(void) ieee80211_cancel_scan(vap);
+	mdelay(10);
+#ifdef IW_SCAN_THIS_ESSID
+	if (data && (data->flags & IW_SCAN_THIS_ESSID)) {
+		struct iw_scan_req req;
+		struct ieee80211_scan_ssid ssid;
+		int copyLength;
+		IEEE80211_DPRINTF(vap, IEEE80211_MSG_SCAN,
+			"%s: SCAN_THIS_ESSID requested\n", __func__);
+		if (data->length > sizeof req) {
+			copyLength = sizeof req;
+		} else {
+			copyLength = data->length;
+		}
+		memset(&req, 0, sizeof req);
+		if (copy_from_user(&req, data->pointer, copyLength))
+			return -EFAULT;
+		memcpy(&ssid.ssid, req.essid, sizeof ssid.ssid);
+		ssid.len = req.essid_len;
+		IEEE80211_DPRINTF(vap, IEEE80211_MSG_SCAN,
+				  "%s: requesting scan of essid '%s'\n", __func__, ssid.ssid);
+		(void) ieee80211_start_scan(vap,
+			IEEE80211_SCAN_ACTIVE |
+			IEEE80211_SCAN_NOPICK |
+			IEEE80211_SCAN_ONCE, IEEE80211_SCAN_FOREVER,
+			1, &ssid);
+		return 0;
+	}
+#endif		 
 	(void) ieee80211_start_scan(vap,
 			IEEE80211_SCAN_ACTIVE |
 			IEEE80211_SCAN_NOPICK |
