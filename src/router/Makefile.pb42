#
# Broadcom Linux Router Makefile
#
# Copyright 2001-2003, Broadcom Corporation
# All Rights Reserved.
#
# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
# KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
# SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
#
# $Id: Makefile,v 1.2 2005/09/26 11:06:58 seg Exp $
#

include .config
ifneq ($(wildcard ../cy_conf.mak),)
  include ../cy_conf.mak
endif

#
# Paths
#
OPENSER_MODULES := sl tm rr maxfwd usrloc registrar dbtext textops exec auth auth_db nathelper
OPENSER_MODULE_FILES := $(foreach module,$(OPENSER_MODULES),openser/modules/$(module)/$(module).so)
OPENSSL_NO_CIPHERS:= no-idea no-md2 no-mdc2 no-rc5 no-sha0 no-rmd160 no-aes192
OPENSSL_OPTIONS:= shared no-ec no-err no-fips no-hw no-krb5 no-threads zlib-dynamic no-engines

# Source bases

export PLATFORM LINUXDIR LIBDIR USRLIBDIR
export TOP := $(shell pwd)
export SRCBASE := $(shell (cd $(TOP)/.. && pwd -P))


# Set the HAL directory if you have the HAL sources

# Set the Atheros Rate Control directory if you have the proprietary rate control
export ATH_RATE=ath_rate/sample

#
# Cross-compile environment variables
#

# Build platform
export BUILD := i386-pc-linux-gnu
export HOSTCC := gcc

# uClibc wrapper
export ARCH:=$(PLATFORM)
ifeq ($(CONFIG_UCLIBC),y)
export PLATFORM := $(PLATFORM)-uclibc
endif

#export LINUXDIR := $(SRCBASE)/linux/linux.v24
#ifeq ($(ARCH),mips)
#export LINUXDIR := $(SRCBASE)/linux/ar531x/linux-2.6.22
#endif
ifeq ($(ARCH),armeb)
export LINUXDIR := $(SRCBASE)/linux/xscale/linux-2.6.17
endif
ifeq ($(ARCH),powerpc)
export LINUXDIR := $(SRCBASE)/linux/magicbox/linux-2.6.19
endif
ifeq ($(ARCH),mipsel)
export LINUXDIR := $(SRCBASE)/kernel/rb500/linux-2.6.17-rc5
endif
ifeq ($(ARCH),i386)
export LINUXDIR := $(SRCBASE)/kernel/wrap/linux-2.6.16.7
endif

export KERNELRELEASE = $(shell cat $(LINUXDIR)/include/config/kernel.release 2> /dev/null)

#ifeq ($(KERNELRELEASE),"")
#export KERNELRELEASE = $(shell cat $(LINUXDIR)/include/config/kernel.release 2> /dev/null)
#endif
#ifeq ($(PLATFORM),mipsel)
#export CROSS_COMPILE := mipsel-linux-
#export CONFIGURE := ./configure mipsel-linux --build=$(BUILD)
#export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../mipsel-linux && pwd -P)
#endif

#ifeq ($(PLATFORM),mipsel-uclibc)
export CROSS_COMPILE := $(ARCH)-linux-uclibc-
export CONFIGURE := ./configure $(ARCH)-linux --build=$(BUILD)
export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/.. && pwd -P)
#endif

#ifeq ($(CONFIG_BCMWPA2),y)
#export CFLAGS += -DBCMWPA2 
#endif

export BASEOPT:=-Os
#export ARCH:= mipsel

ifeq ($(ARCH),mipsel)
export COPTS:=$(BASEOPT) -pipe -mips32 -mtune=mips32 -funit-at-a-time 
endif
ifeq ($(ARCH),armeb)
export COPTS:=$(BASEOPT) -pipe -mtune=xscale -march=armv5te -Wa,-mcpu=xscale -mno-thumb-interwork -mno-thumb -funit-at-a-time 
endif
ifeq ($(ARCH),mips)
export COPTS:=$(BASEOPT) -pipe -mips32r2 -mtune=mips32r2 -msoft-float  -fno-caller-saves
endif
ifeq ($(ARCH),powerpc)
export COPTS:=$(BASEOPT) -pipe -funit-at-a-time -mcpu=405fp -mtune=405fp -mmultiple -mstring -mno-bit-align 
endif
ifeq ($(ARCH),i386)
export COPTS:=$(BASEOPT) -pipe -march=i486 -funit-at-a-time 
endif

export CC := ccache $(CROSS_COMPILE)gcc
export CXX := ccache $(CROSS_COMPILE)g++
export AR := $(CROSS_COMPILE)ar
export AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
export NM := $(CROSS_COMPILE)nm
export RANLIB := $(CROSS_COMPILE)ranlib
export STRIP := $(CROSS_COMPILE)strip
export SIZE := $(CROSS_COMPILE)size
export LTO :=

export CFLAGS := $(COPTS)

#
# Install and target directories
#

export PLATFORMDIR := $(TOP)/$(PLATFORM)
export INSTALLDIR := $(PLATFORMDIR)/install
export TARGETDIR := $(PLATFORMDIR)/target

ifeq ($(PLATFORM),mipsel)
obj-y += libcrypto
endif
#
# Configuration
#
CONFIG_IPTABLES=y
include rules/configs.mk

obj-clean := $(foreach obj,$(obj-y) $(obj-n) $(obj-m),$(obj)-clean)
obj-install := $(foreach obj,$(obj-y) $(obj-m),$(obj)-install)
obj-distclean := $(foreach obj,$(obj-y) $(obj-n),$(obj)-distclean)

#
# Basic rules
#


all: build_date clean_target $(obj-y) $(obj-m) $(LINUXDIR)/.config kernel


build_date:
	echo "#define BUILD_DATE \"$(shell date +%D)\"" > ../../opt/build.h 

drop-sections	= .comment
strip-flags	= $(addprefix --remove-section=,$(drop-sections))

kernelsource:
	mkdir -p $(LINUXDIR)
	wget http://www.de.kernel.org/pub/linux/kernel/v2.6/linux-$(KERNELVERSION).tar.bz2 -O $(LINUXDIR)/../linux-$(KERNELVERSION).tar.bz2
	cd $(LINUXDIR)/../ && tar -xvjf $(LINUXDIR)/../linux-$(KERNELVERSION).tar.bz2
	cd $(LINUXDIR)/../ && ./patch $(KERNELVERSION)


kernel:
        # Also build kernel
	# Also build kernel
ifeq ($(CONFIG_LSX),y)
	cp $(LINUXDIR)/.config_lsx $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_LSX_PROTO),y)
	cp $(LINUXDIR)/.config_lsx_4m $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_RS),y)
	cp $(LINUXDIR)/.config_rs $(LINUXDIR)/.config
endif

ifeq ($(CONFIG_RSPRO),y)
	cp $(LINUXDIR)/.config_rspro $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_PB44),y)
	cp $(LINUXDIR)/.config_pb44 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_AP83),y)
	cp $(LINUXDIR)/.config_ap83 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR1043),y)
	cp $(LINUXDIR)/.config_wr1043 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR941),y)
	cp $(LINUXDIR)/.config_wr941 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR741),y)
	cp $(LINUXDIR)/.config_wr741 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_MR3420),y)
	cp $(LINUXDIR)/.config_mr3240 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR842),y)
	cp $(LINUXDIR)/.config_wr842 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR741V4),y)
	cp $(LINUXDIR)/.config_wr741v4 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WR703),y)
	cp $(LINUXDIR)/.config_wr703 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WRT400),y)
	cp $(LINUXDIR)/.config_wrt400 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR825),y)
	cp $(LINUXDIR)/.config_dir825 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WNDR3700),y)
	cp $(LINUXDIR)/.config_wndr3700 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WNDR3700V2),y)
	cp $(LINUXDIR)/.config_wndr3700v2 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WP543),y)
	cp $(LINUXDIR)/.config_wp543 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WP546),y)
	cp $(LINUXDIR)/.config_wp546 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_UBNTM),y)
	cp $(LINUXDIR)/.config_ar7240 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WRT160NL),y)
	cp $(LINUXDIR)/.config_wrt160nl $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_TEW632BRP),y)
	cp $(LINUXDIR)/.config_tew632brp $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WHRHPGN),y)
	cp $(LINUXDIR)/.config_ar7240_nousb $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WNR2000),y)
	cp $(LINUXDIR)/.config_ar7240_nousb $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WNR2200),y)
	cp $(LINUXDIR)/.config_wnr2200 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR615E),y)
	cp $(LINUXDIR)/.config_dir615e $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_TG2521),y)
	cp $(LINUXDIR)/.config_tg2521 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_JA76PF),y)
	cp $(LINUXDIR)/.config_jjplus $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_JWAP003),y)
	cp $(LINUXDIR)/.config_jjplus_jwap003 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_ALFAAP94),y)
	cp $(LINUXDIR)/.config_alfaap94 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WZRHPAG300NH),y)
	cp $(LINUXDIR)/.config_wzrhpag300nh $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WZRG450),y)
	cp $(LINUXDIR)/.config_wzrg450 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WZRG300NH2),y)
	cp $(LINUXDIR)/.config_wzrg300nh2 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR632),y)
	cp $(LINUXDIR)/.config_dir632 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_HORNET),y)
	cp $(LINUXDIR)/.config_hornet $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WASP),y)
	cp $(LINUXDIR)/.config_wasp $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR825C1),y)
	cp $(LINUXDIR)/.config_dir825c1 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_KERNEL_ELF_CORE),y)
	sed -i 's/\# CONFIG_ELF_CORE is not set/CONFIG_ELF_CORE=y/g' $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_EOP_TUNNEL),y)
	echo CONFIG_NET_ETHERIP=m >> $(LINUXDIR)/.config
else
	echo "# CONFIG_NET_ETHERIP is not set" >> $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_IPETH),y)
	sed -i 's/\# CONFIG_USB_IPHETH is not set/CONFIG_USB_IPHETH=m/g' $(LINUXDIR)/.config
endif
	$(MAKE) -C $(LINUXDIR) oldconfig	
	if ! grep -q "CONFIG_EMBEDDED_RAMDISK=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -j 4 -C $(LINUXDIR) vmlinux CROSS_COMPILE="ccache $(ARCH)-linux-uclibc-" ; \
	fi
	if grep -q "CONFIG_MODULES=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -j 4 -C $(LINUXDIR) modules CROSS_COMPILE="ccache $(ARCH)-linux-uclibc-" ; \
	fi
	$(ARCH)-linux-objcopy -O binary $(LINUXDIR)/vmlinux $(ARCH)-uclibc/vmlinus 


realclean: $(obj-clean)
	rm -f .config.old .config.cmd
	#umount $(TARGETDIR)
	rm -rf $(INSTALLDIR)
	rm -rf $(TARGETDIR)
	-rm -f $(TARGETDIR)/*
	-rm -f $(ARCH)-uclibc/*

		
clean: rc-clean httpd-clean services-clean shared-clean libutils-clean madwifi-clean madwifi_mimo-clean busybox-clean dnsmasq-clean iptables-clean pppd-clean nvram-clean utils-clean radauth-clean
	rm -f .config.old .config.cmd
	#umount $(TARGETDIR)
	rm -rf $(INSTALLDIR)
	rm -rf $(TARGETDIR)
	rm -f $(TARGETDIR)/*
	-rm -f $(ARCH)-uclibc/*

distclean mrproper: $(obj-distclean) clean_target
	rm -rf $(INSTALLDIR)
	$(MAKE) -C $(LINUXDIR) distclean
	$(MAKE) -C $(LINUXDIR)/arch/mips/bcm947xx/compressed clean
	#rm -f $(PLATFORMDIR)/zImage $(PLATFORMDIR)/linux.bin
	$(MAKE) -C config clean
	rm -f .config $(LINUXDIR)/.config
	rm -f .config.old .config.cmd

optimize-lib:
	make -f Makefile.pb42 lib.$(ARCH)-install

	relink-lib.sh \
		"$(ARCH)-linux-" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libc_so.a}" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libc_so.a}" \
		"$(ARCH)-uclibc/target/lib/libc.so.0" \
		-Wl,-init,__uClibc_init -Wl,-soname=libc.so.0 \
		${shell $(ARCH)-linux-gcc -print-file-name=libgcc_s.so.1}

	relink-lib.sh \
		"$(ARCH)-linux-" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libcrypt.so}" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libcrypt_pic.a}" \
		"$(ARCH)-uclibc/target/lib/libcrypt.so.0" \
		${shell $(ARCH)-linux-gcc -print-file-name=libgcc_s.so.1} \
		-Wl,-soname=libcrypt.so.0

	relink-lib.sh \
		"$(ARCH)-linux-" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libm.so}" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libm_pic.a}" \
		"$(ARCH)-uclibc/target/lib/libm.so.0" \
		${shell $(ARCH)-linux-gcc -print-file-name=libgcc_s.so.1} \
		-Wl,-soname=libm.so.0 

	relink-lib.sh \
		"$(ARCH)-linux-" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libpthread.so.0}" \
		"${shell $(ARCH)-linux-gcc -print-file-name=libpthread_so.a}" \
		"$(ARCH)-uclibc/target/lib/libpthread.so.0" \
		-Wl,-z,nodelete,-z,initfirst,-init=__pthread_initialize_minimal_internal \
		${shell $(ARCH)-linux-gcc -print-file-name=libgcc_s.so.1} \
		-Wl,-soname=libpthread.so.0

	cp ${shell $(ARCH)-linux-gcc -print-file-name=libgcc_s.so.1} $(ARCH)-uclibc/target/lib/libgcc_s.so.1 

ifneq ($(CONFIG_NOOPT),y)
	rm -rf /tmp/$(ARCHITECTURE)/mklibs-out
	rm -f /tmp/$(ARCHITECTURE)/mklibs-progs
	-mkdir -p /tmp/$(ARCHITECTURE)/
	find $(TARGETDIR) -type f -perm +100 -exec \
		file -r -N -F '' {} + | \
		awk ' /executable.*dynamically/ { print $$1 }' > /tmp/$(ARCHITECTURE)/mklibs-progs

	find $(TARGETDIR) -type f -name \*.so\* -exec \
		file -r -N -F '' {} + | \
		awk ' /shared object/ { print $$1 }' >> /tmp/$(ARCHITECTURE)/mklibs-progs

	mkdir -p /tmp/$(ARCHITECTURE)/mklibs-out
	mklibs.py -D \
		-d /tmp/$(ARCHITECTURE)/mklibs-out \
		--sysroot $(TARGETDIR) \
		-L /lib \
		-L /usr/lib \
		--ldlib /lib/ld-uClibc.so.0 \
		--target $(ARCH)-linux-uclibc \
		`cat /tmp/$(ARCHITECTURE)/mklibs-progs` 2>&1
	cp /tmp/$(ARCHITECTURE)/mklibs-out/* $(TARGETDIR)/lib
endif
	rm -f $(TARGETDIR)/lib/*.a
	rm -f $(TARGETDIR)/lib/*.map
#	cp lib.$(ARCH)/libresolv.so.0 $(TARGETDIR)/lib
#	cp lib.$(ARCH)/libgcc_s.so.1 $(TARGETDIR)/lib

install package: clean_target $(filter-out lib.$(ARCH)-install,$(obj-install)) $(LINUXDIR)/.config
	install -d $(TARGETDIR)
	install -d $(ARCH)-uclibc/modules
	for dir in $(wildcard $(patsubst %,$(INSTALLDIR)/%,$(obj-y))) ; do \
	    (cd $${dir} && tar cpf - .) | (cd $(TARGETDIR) && tar xpf -) \
	done
	for dir in $(wildcard $(patsubst %,%,$(obj-m))) ; do \
	    (cd $(INSTALLDIR)/$${dir} && tar -cvvzf $(TOP)/$(ARCH)-uclibc/modules/$${dir}.tar.gz .) \
	done
	mkdir -p $(ARCH)-uclibc/target/etc/config
	mkdir -p $(ARCH)-uclibc/target/etc/kaid
	mkdir -p $(ARCH)-uclibc/target/etc/langpack
	cp ./opt/bin/ipkg $(ARCH)-uclibc/target/bin
	cd  $(ARCH)-uclibc/target/lib
	cp ./opt/etc/preinit $(ARCH)-uclibc/target/etc
	cp ./opt/etc/postinit $(ARCH)-uclibc/target/etc
	cp ./opt/etc/ipkg.conf $(ARCH)-uclibc/target/etc
	cp ./opt/etc/config/* $(ARCH)-uclibc/target/etc/config
ifeq ($(CONFIG_HTTPD),y)
	cp ./opt/usr/lib/smb.conf $(ARCH)-uclibc/target/usr/lib
	ln -sf ../tmp/smbshare $(ARCH)-uclibc/target/www/smb
endif
ifeq ($(CONFIG_KAID),y)
	cp kaid/kaid $(TARGETDIR)/usr/sbin
endif
ifeq ($(CONFIG_RC),y)
	mv $(TARGETDIR)/usr/lib/services.so $(TARGETDIR)/lib
endif

	# optimize the crypto library by removing unneeded symbols
	#[ ! -d libcrypto ] || $(MAKE) -C libcrypto optimize
	#[ ! -d libcrypto ] || $(MAKE) -C libcrypto optimize
	# Install (and possibly optimize) C library

	# optimize the others library by removing unneeded symbols
	$(MAKE) -f Makefile.pb42 optimize-lib
	# Install modules into filesystem
	if grep -q "CONFIG_MODULES=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -C $(LINUXDIR) modules_install DEPMOD=/bin/true INSTALL_MOD_PATH=$(TARGETDIR) ; \
	fi
ifeq ($(CONFIG_MADWIFI),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wl
endif
#	mkdir -p $(TARGETDIR)/lib/modules/2.4.32/kernel/drivers/net/ctmisc
#	cp ../wl/ctmisc/ctmisc.o $(TARGETDIR)/lib/modules/2.4.32/kernel/drivers/net/ctmisc
	##not used yet
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	#cp ./switch/switch-core.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
#	cp ./viarhine/via-rhine.o $(TARGETDIR)/lib/modules/2.4.32/kernel/drivers/net

	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	#cp ./switch/switch-adm.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	#cp ./switch/switch-robo.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/switch
	
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc1/kernel/drivers/net/et
	#cp ../et/linux/et.o $(TARGETDIR)/lib/modules/2.4.32-rc1/kernel/drivers/net/et
	
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/et.4702
	#cp ../et.4702/linux/4702et.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/et.4702
	# robo switch
	#mkdir -p $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/robo
	#cp ../robo/linux/robo.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/robo

	find $(TARGETDIR) -name "wl_*.o"  | xargs rm -rf
	# quick n dirty - stuff Nikki's module where it belongs
	#mkdir $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/adm6996
#	if [ "$(CONFIG_MMC)" = "y" ] ; then \
#	mkdir $(TARGETDIR)/lib/modules/2.4.32/kernel/fs/mmc ; \
#	cp mmc/mmc.o $(TARGETDIR)/lib/modules/2.4.32/kernel/fs/mmc ; \
#	fi ; 
ifneq ($(CONFIG_SAMBA),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/cifs
endif
ifneq ($(CONFIG_JFFS2),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jffs2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/lib/lzma
endif
ifneq ($(CONFIG_IPV6),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/net/ipv6
endif
ifneq ($(CONFIG_BONDING),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/bonding
endif
ifneq ($(CONFIG_USBIP),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/staging/usbip
endif
ifneq ($(CONFIG_USB),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/fat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/vfat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/msdos
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/mbcache.ko
endif
ifneq ($(CONFIG_USB_ADVANCED),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext4
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/btrfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd	
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd2	
endif


#ifeq ($(CONFIG_MSSID),y)
#	cp adm6996.v24/adm6996.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/adm6996/adm6996.o
#else	
#	cp adm6996/adm6996.o $(TARGETDIR)/lib/modules/2.4.32-rc3/kernel/drivers/net/adm6996/adm6996.o
#endif

	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/build
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/source
	
        # Prepare filesystem
	cd $(TARGETDIR) && $(TOP)/misc/rootprep.sh
        # Make sure mksquashfs-2.0 is used
#	$(MAKE) -C $(LINUXDIR)/scripts/squashfs mksquashfs
	cd $(TARGETDIR)  &&  find . -iname "CVS" | xargs rm -rf
	cd $(TARGETDIR)  &&  find . -iname ".svn" | xargs rm -rf
#	cp viarhine/pci-scan.o $(TARGETDIR)/lib/modules/2.4.32/kernel/drivers/net/pci-scan.o
#	cp -f test/* $(TARGETDIR)/lib/modules/2.4.33-pre1/kernel/drivers/net
	
#	mknod $(TARGETDIR)/dev/cfa b 13 0
#	mknod $(TARGETDIR)/dev/cfa1 b 13 1
#	mknod $(TARGETDIR)/dev/cfa2 b 13 2
#	mknod $(TARGETDIR)/dev/cfa3 b 13 3
#	mknod $(TARGETDIR)/dev/cfa4 b 13 4
#	umount $(TARGETDIR)
	find $(TARGETDIR)/lib/modules -name *.ko -exec mips-linux-strip --strip-unneeded --remove-section=.comment {} +		
	#e2fsck -y -f $(ARCH)-uclibc/root.fs
#	./busybox/examples/depmod.pl -F $(LINUXDIR)/System.map -b $(ARCH)-uclibc/target/lib/modules
	
	#cd $(TARGETDIR)
#	tar --directory=$(TARGETDIR) --remove-files -cvvjf $(TARGETDIR)/etc/local.tar.bz2 usr/local
	rm -rf $(TARGETDIR)/usr/local
	mkdir $(TARGETDIR)/usr/local
#ifneq ($(CONFIG_NOOPT),y)
	-./strip_libs.sh $(ARCH)
#endif
ifeq ($(CONFIG_WRK54G),y)
	misc/makeDevs $(ARCH)-uclibc/target	
endif
	@true
#ifeq ($(CONFIG_LIBOPT),y)
#	cp -f lib.$(ARCH)/libpthread.so.0 $(TARGETDIR)/lib
#	sstrip/sstrip $(TARGETDIR)/lib/libpthread.so.0
#endif


#ifeq ($(CONFIG_DLNA),y)
#	$(LINUXDIR)/scripts/squashfs/mksquashfs-lzma $(ARCH)-uclibc/target $(ARCH)-uclibc/root.fs -noappend -be -b 262144
#else
	$(LINUXDIR)/scripts/squashfs/mksquashfs-lzma $(ARCH)-uclibc/target $(ARCH)-uclibc/root.fs -noappend -be
#endif
	mkfs.jffs2 --pad --big-endian --squash -e 0x10000 -o $(ARCH)-uclibc/dd-wrt.jffs2 -d $(ARCH)-uclibc/target
	
	cp $(LINUXDIR)/vmlinux $(ARCH)-uclibc/vmlinux

	cp $(ARCH)-uclibc/vmlinux $(ARCH)-uclibc/vmlinux.bak 
	mips-linux-uclibc-objcopy -O binary $(strip-flags) -g $(ARCH)-uclibc/vmlinux $(ARCH)-uclibc/vmlinux.bin
	lzma e -lc1 -lp2 -pb2 -d25 $(ARCH)-uclibc/vmlinux.bin $(ARCH)-uclibc/vmlinux.lzma
#	gzip -9 $(ARCH)-uclibc/vmlinux.bin $(ARCH)-uclibc/vmlinux.gz
	dd if=$(ARCH)-uclibc/vmlinux.lzma of=$(ARCH)-uclibc/vmlinux.bin.l7 bs=65536 conv=sync

#	dd if=$(ARCH)-uclibc/vmlinux.gz of=$(ARCH)-uclibc/vmlinux.bin.gz bs=65536 conv=sync
ifeq ($(CONFIG_LSX),y)
	dd if=$(ARCH)-uclibc/vmlinux.lzma of=$(ARCH)-uclibc/vmlinux.lsx bs=65536 conv=sync
	cat $(ARCH)-uclibc/root.fs>>$(ARCH)-uclibc/vmlinux.lsx
endif

ifeq ($(CONFIG_AP83),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap83-firmware.bin $(ARCH)-uclibc/aligned.uimage
endif
ifeq ($(CONFIG_AP96),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap96-firmware.bin $(ARCH)-uclibc/aligned.uimage
endif
ifeq ($(CONFIG_AP94),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap94-firmware.bin $(ARCH)-uclibc/aligned.uimage
endif
ifeq ($(CONFIG_ALFAAP94),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap94-firmware.bin $(ARCH)-uclibc/aligned.uimage
endif
ifeq ($(CONFIG_WZRG300NH),y)
	tools/wzrg300nh/tftpfw $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh-firmware.tftp
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),MULTI)

	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh-firmware.enc
	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg301nh-firmware.enc
ifeq ($(CONFIG_BUFFALO),y)
	tools/bufenc/mkfw -hw_ver=2 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh-firmware.enc $(ARCH)-uclibc/wzrg300nh-firmware_MULTI.enc
	tools/bufenc/mkfw -hw_ver=3 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "3.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg301nh-firmware.enc $(ARCH)-uclibc/wzrg301nh-firmware_MULTI.enc
else
	tools/bufenc/mkfw-multi -hw_ver=2 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "1.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh-firmware.enc $(ARCH)-uclibc/wzrg300nh-firmware_MULTI.enc
	tools/bufenc/mkfw-multi -hw_ver=3 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "3.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg301nh-firmware.enc $(ARCH)-uclibc/wzrg301nh-firmware_MULTI.enc
endif
else
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),EU-US)
#eu-us region
	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=2 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh-firmware.enc $(ARCH)-uclibc/wzrg300nh-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg301nh-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=3 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "3.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg301nh-firmware.enc $(ARCH)-uclibc/wzrg301nh-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
else
	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh-firmware.enc
	tools/bufenc/mkfw -hw_ver=2 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh-firmware.enc $(ARCH)-uclibc/wzrg300nh-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
	tools/bufenc/encryptRC4 WZR-HP-G300NH 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg301nh-firmware.enc
	tools/bufenc/mkfw -hw_ver=3 -hcrypt="Buffalo" "WZR-HP-G300NH" "WZR-HP-G300NH" "1.74" "3.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg301nh-firmware.enc $(ARCH)-uclibc/wzrg301nh-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
endif
endif
endif


ifeq ($(CONFIG_WZRG450),y)
	tools/wzrg300nh/tftpfw $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.tftp
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),MULTI)
ifeq ($(CONFIG_BUFFALO),y)
ifeq ($(CONFIG_BUFFALO_SA),y)
	tools/bufenc/encryptRC4 WZR-HP-G450H 1.76 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -productid=00000003  -hcrypt="Buffalo" "WZR-HP-G450H" "WZR-HP-G450H" "1.76" "2.08" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg450-firmware.enc $(ARCH)-uclibc/wzrg450-firmware_MULTI.enc
else
	tools/bufenc/encryptRC4 WZR-HP-G450H 1.75 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -productid=00000003  -hcrypt="Buffalo" "WZR-HP-G450H" "WZR-HP-G450H" "1.75" "2.08" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg450-firmware.enc $(ARCH)-uclibc/wzrg450-firmware_MULTI.enc
endif
else
	tools/bufenc/encryptRC4 WZR-HP-G450H 1.75 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -productid=00000003 -hcrypt="Buffalo" "WZR-HP-G450H" "WZR-HP-G450H" "1.75" "2.08" "US-EU-AP-TW-KR-CH-JP-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg450-firmware.enc $(ARCH)-uclibc/wzrg450-firmware_MULTI.enc
endif
else
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),EU-US)
#eu-us region
	tools/bufenc/encryptRC4 WZR-HP-G450H 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.enc
	tools/bufenc/mkfw-new -hw_ver=0 -productid=00000003 -hcrypt="Buffalo" "WZR-HP-G450H" "WZR-HP-G450H" "1.75" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg450-firmware.enc $(ARCH)-uclibc/wzrg450-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
else
	tools/bufenc/encryptRC4 WZR-HP-G450H 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg450-firmware.enc
	tools/bufenc/mkfw-new -hw_ver=0 -productid=00000003 -hcrypt="Buffalo" "WZR-HP-G450H" "WZR-HP-G450H" "1.75" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg450-firmware.enc $(ARCH)-uclibc/wzrg450-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
endif
endif
endif



ifeq ($(CONFIG_WZRG300NH2),y)
	tools/wzrg300nh/tftpfw $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.tftp
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),MULTI)
ifeq ($(CONFIG_BUFFALO),y)
ifeq ($(CONFIG_BUFFALO_SA),y)
	tools/bufenc/encryptRC4 WZR-HP-G302H 1.81 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.enc
	tools/bufenc/mkfw -hw_ver=4 -hcrypt="Buffalo" "WZR-HP-G300NH2" "WZR-HP-G302H" "1.81" "1.06" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh2-firmware.enc $(ARCH)-uclibc/wzrg300nh2-firmware_MULTI.enc
else
	tools/bufenc/encryptRC4 WZR-HP-G302H 1.80 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.enc
	tools/bufenc/mkfw -hw_ver=4 -hcrypt="Buffalo" "WZR-HP-G300NH2" "WZR-HP-G302H" "1.81" "2.08" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh2-firmware.enc $(ARCH)-uclibc/wzrg300nh2-firmware_MULTI.enc
endif
else
	tools/bufenc/encryptRC4 WZR-HP-G302H 1.80 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.enc
	tools/bufenc/mkfw-multi -hw_ver=4 -hcrypt="Buffalo" "WZR-HP-G300NH2" "WZR-HP-G302H" "1.80" "2.08" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh2-firmware.enc $(ARCH)-uclibc/wzrg300nh2-firmware_MULTI.enc
endif
else
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),EU-US)
#eu-us region
	tools/bufenc/encryptRC4 WZR-HP-G302H 1.80 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=4 -hcrypt="Buffalo" "WZR-HP-G300NH2" "WZR-HP-G302H" "1.80" "2.08" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh2-firmware.enc $(ARCH)-uclibc/wzrg300nh2-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
else
	tools/bufenc/encryptRC4 WZR-HP-G302H 1.80 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrg300nh2-firmware.enc
	tools/bufenc/mkfw -hw_ver=4 -hcrypt="Buffalo" "WZR-HP-G300NH2" "WZR-HP-G302H" "1.80" "2.08" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrg300nh2-firmware.enc $(ARCH)-uclibc/wzrg300nh2-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
endif
endif
endif

ifeq ($(CONFIG_WZRHPAG300NH),y)
	tools/wzrg300nh/tftpfw $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300nh-firmware.tftp
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),MULTI)
ifeq ($(CONFIG_BUFFALO),y)
ifeq ($(CONFIG_BUFFALO_SA),y)
	tools/bufenc/encryptRC4 WZR-HP-AG300H 1.77 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300h-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WZR-HP-AG300H" "WZR-HP-AG300H" "1.77" "3.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrag300h-firmware.enc $(ARCH)-uclibc/wzrag300h-firmware_MULTI.enc
else
	tools/bufenc/encryptRC4 WZR-HP-AG300H 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300h-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WZR-HP-AG300H" "WZR-HP-AG300H" "1.74" "3.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrag300h-firmware.enc $(ARCH)-uclibc/wzrag300h-firmware_MULTI.enc
endif
else
	tools/bufenc/encryptRC4 WZR-HP-AG300H 1.74 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300h-firmware.enc
	tools/bufenc/mkfw-multi -hw_ver=0 -hcrypt="Buffalo" "WZR-HP-AG300H" "WZR-HP-AG300H" "1.74" "3.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrag300h-firmware.enc $(ARCH)-uclibc/wzrag300h-firmware_MULTI.enc
endif
else
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),EU-US)
#eu-us region
	tools/bufenc/encryptRC4 WZR-HP-AG300H 1.71 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300h-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=0 -hcrypt="Buffalo" "WZR-HP-AG300H" "WZR-HP-AG300H" "1.74" "3.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrag300h-firmware.enc $(ARCH)-uclibc/wzrag300h-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
else
	tools/bufenc/encryptRC4 WZR-HP-AG300H 1.71 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/wzrag300h-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WZR-HP-AG300H" "WZR-HP-AG300H" "1.74" "3.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/wzrag300h-firmware.enc $(ARCH)-uclibc/wzrag300h-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
endif
endif
endif

ifeq ($(CONFIG_RSPRO),y)
	-./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/rspro-firmware.bin $(ARCH)-uclibc/vmlinux.lsx
	-tools/ubnt/src/mkfwimage -v RSPRO.ar7100pro.DD-WRT -o mips-uclibc/RSPRO.dd-wrt.bin -i tools/ubnt/rs-ddwrt.txt
else

ifeq ($(CONFIG_RS),y)
	-./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/rs-firmware.bin $(ARCH)-uclibc/vmlinux.lsx
	-tools/ubnt/src/mkfwimage -v RSx.ar7100.DD-WRT -o mips-uclibc/RS.dd-wrt.bin -i tools/ubnt/rs-ddwrt.txt

else
ifeq ($(CONFIG_LSX),y)
	-./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/lsx-firmware.bin $(ARCH)-uclibc/vmlinux.lsx
	-tools/ubnt/src/mkfwimage -v LS-SR71.ar7100.DD-WRT -o mips-uclibc/LSX.dd-wrt.bin -i tools/ubnt/lsx-ddwrt.txt
endif
ifeq ($(CONFIG_WP543),y)
	-./tools/compex/mkmylofw -B WP543 \
		-p0x30000:0x7d0000:alp:0x80060000 \
		-b0x30000:0x7d0000::$(ARCH)-uclibc/vmlinux.lsx 	\
		mips-uclibc/wp543.img
endif
ifeq ($(CONFIG_WP546),y)
	-./tools/compex/mkmylofw -B WP546 \
		-p0x30000:0x7d0000:alp:0x80060000 \
		-b0x30000:0x7d0000::$(ARCH)-uclibc/vmlinux.lsx 	\
		mips-uclibc/wp546.img
endif
endif
endif
ifeq ($(CONFIG_UBNTM),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ar7420-firmware.bin $(ARCH)-uclibc/aligned.uimage
	tools/ubnt/src/mkfwimage -v XM.ar7240.v6.0.0.60000.110900.1000 -o $(ARCH)-uclibc/ubntm-dd-wrt.bin -i tools/ubnt/m-dd-wrt.txt
	tools/ubnt/src/mkfwimage -v BZ.ar7240.v6.0.0.60000.110900.1000 -o $(ARCH)-uclibc/ubntbz-dd-wrt.bin -i tools/ubnt/m-dd-wrt.txt
endif
ifeq ($(CONFIG_WHRHPGN),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	-./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap93-firmware.bin $(ARCH)-uclibc/aligned.uimage
	-tools/wzrg300nh/tftpfw $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-hp-gn-firmware.tftp

ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),MULTI)
#multi region
ifeq ($(CONFIG_BUFFALO_SA),y)
	tools/bufenc/encryptRC4 WHR-HP-G300N 1.84 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-G300N" "WHR-HP-G300N" "1.84" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-g300n-firmware_MULTI.enc
	tools/bufenc/encryptRC4 WHR-HP-GN 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-GN" "WHR-HP-GN" "1.82" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-gn-firmware_MULTI.enc
else
	tools/bufenc/encryptRC4 WHR-HP-G300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-G300N" "WHR-HP-G300N" "1.82" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-g300n-firmware_MULTI.enc
	tools/bufenc/encryptRC4 WHR-HP-GN 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-GN" "WHR-HP-GN" "1.82" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-gn-firmware_MULTI.enc
	tools/bufenc/encryptRC4 WHR-G301N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-G301N" "WHR-G301N" "1.82" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-g300n-firmware_MULTI.enc
	tools/bufenc/encryptRC4 WLAE-AG300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WLAE-AG300N" "WLAE-AG300N" "1.82" "1.01" "US-EU-AP-TW-KR-CH-RU" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/wlae-ag300n-firmware_MULTI.enc
endif
else
ifeq ($(CONFIG_DEFAULT_COUNTRYCODE),EU-US)
#eu-us region
	tools/bufenc/encryptRC4 WHR-HP-G300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-G300N" "WHR-HP-G300N" "1.82" "1.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-g300n-firmware_EU-US.enc
	tools/bufenc/encryptRC4 WHR-HP-GN 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-GN" "WHR-HP-GN" "1.82" "1.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-gn-firmware_EU-US.enc
	tools/bufenc/encryptRC4 WHR-G301N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=0 -hcrypt="Buffalo" "WHR-G301N" "WHR-G301N" "1.82" "1.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-g300n-firmware_EU-US.enc
	tools/bufenc/encryptRC4 WLAE-AG300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw-eu-us -hw_ver=0 -hcrypt="Buffalo" "WLAE-AG300N" "WLAE-AG300N" "1.82" "1.01" "US" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/wlae-ag300n-firmware_EU-US.enc
else
	tools/bufenc/encryptRC4 WHR-HP-G300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-G300N" "WHR-HP-G300N" "1.82" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-g300n-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
	tools/bufenc/encryptRC4 WHR-HP-GN 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-HP-GN" "WHR-HP-GN" "1.82" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-hp-gn-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
	tools/bufenc/encryptRC4 WHR-G301N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WHR-G301N" "WHR-G301N" "1.82" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/whr-g300n-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
	tools/bufenc/encryptRC4 WLAE-AG300N 1.82 Buffalo $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/whr-firmware.enc
	tools/bufenc/mkfw -hw_ver=0 -hcrypt="Buffalo" "WLAE-AG300N" "WLAE-AG300N" "1.82" "1.01" "$(CONFIG_DEFAULT_COUNTRYCODE)" "mlang8" "ath" "" 80041000 80200000 1 $(ARCH)-uclibc/whr-firmware.enc $(ARCH)-uclibc/wlae-ag300n-firmware_$(CONFIG_DEFAULT_COUNTRYCODE).enc
endif
endif

endif
ifeq ($(CONFIG_DIR825),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/dir825-uimage.bin
	cat tools/dir825.tag >> $(ARCH)-uclibc/dir825-uimage.bin
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/dir825ww-uimage.bin
	cat tools/dir825ww.tag >> $(ARCH)-uclibc/dir825ww-uimage.bin
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/dir825tw-uimage.bin
	cat tools/dir825tw.tag >> $(ARCH)-uclibc/dir825tw-uimage.bin
	
endif
ifeq ($(CONFIG_DIR825C1),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/dir825c1-uimage.bin
	cat tools/dir825c1.tag >> $(ARCH)-uclibc/dir825c1-uimage.bin	
endif
ifeq ($(CONFIG_TEW673GRU),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/tew673gru-uimage.bin
	cat tools/tew673gru.tag >> $(ARCH)-uclibc/tew673gru-uimage.bin
endif
ifeq ($(CONFIG_WNR2000),y)
	mkdir -p $(ARCH)-uclibc/wnr2000v3/image
	./tools/wndr3700/wnr2000v3 \
		$(ARCH)-uclibc/root.uimage \
		$(ARCH)-uclibc/wnr2000v3/image/uImage

	./tools/wndr3700/mksquashfs-lzma \
		$(ARCH)-uclibc/wnr2000v3 $(ARCH)-uclibc/kernel2000v3.squashfs \
		-nopad -noappend -root-owned -be
	-rm -rf $(ARCH)-uclibc/wnr2000v3

	mkimage -A mips -O linux -T filesystem -C none \
		-a 0xbf070000 -e 0xbf070000 \
		-n 'wnr2000v3-V1.1.4.68' \
		-d $(ARCH)-uclibc/kernel2000v3.squashfs \
		$(ARCH)-uclibc/kernel2000v3.uimage

	./tools/wndr3700/wnr2000v3 \
		$(ARCH)-uclibc/kernel2000v3.uimage \
		$(ARCH)-uclibc/kernel2000v3.image	

	( \
		dd if=$(ARCH)-uclibc/kernel2000v3.image bs=1024k conv=sync; \
		dd if=$(ARCH)-uclibc/root.fs bs=64k; \
	) > $(ARCH)-uclibc/wnr2000v3-uimage.bin

	./tools/wndr3700/mkdniimg -B wnr2000v3 -v 1.1.4.68 -r NA -i $(ARCH)-uclibc/wnr2000v3-uimage.bin -o $(ARCH)-uclibc/wnr2000v3-factory_NA.img
	./tools/wndr3700/mkdniimg -B wnr2000v3 -v 1.1.4.68 -r "" -i $(ARCH)-uclibc/wnr2000v3-uimage.bin -o $(ARCH)-uclibc/wnr2000v3-factory_WW.img
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/wnr2000v3-webflash.bin $(ARCH)-uclibc/wnr2000v3-uimage.bin	

endif
ifeq ($(CONFIG_WNR2200),y)
	mkdir -p $(ARCH)-uclibc/wnr2200/image
	./tools/wndr3700/wnr2200 \
		$(ARCH)-uclibc/root.uimage \
		$(ARCH)-uclibc/wnr2200/image/uImage

	./tools/wndr3700/mksquashfs-lzma \
		$(ARCH)-uclibc/wnr2200 $(ARCH)-uclibc/kernel2200.squashfs \
		-nopad -noappend -root-owned -be
	-rm -rf $(ARCH)-uclibc/wnr2200

	mkimage -A mips -O linux -T filesystem -C none \
		-a 0xbf070000 -e 0xbf070000 \
		-n 'wnr2200-V1.1.4.68' \
		-d $(ARCH)-uclibc/kernel2200.squashfs \
		$(ARCH)-uclibc/kernel2200.uimage

	./tools/wndr3700/wnr2200 \
		$(ARCH)-uclibc/kernel2200.uimage \
		$(ARCH)-uclibc/kernel2200.image	

	( \
		dd if=$(ARCH)-uclibc/kernel2200.image bs=1024k conv=sync; \
		dd if=$(ARCH)-uclibc/root.fs bs=64k; \
	) > $(ARCH)-uclibc/wnr2200-uimage.bin

	./tools/wndr3700/mkdniimg -B wnr2200 -v 1.1.4.68 -r NA -i $(ARCH)-uclibc/wnr2200-uimage.bin -o $(ARCH)-uclibc/wnr2200-factory_NA.img
	./tools/wndr3700/mkdniimg -B wnr2200 -v 1.1.4.68 -r "" -i $(ARCH)-uclibc/wnr2200-uimage.bin -o $(ARCH)-uclibc/wnr2200-factory_WW.img
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/wnr2200-webflash.bin $(ARCH)-uclibc/wnr2200-uimage.bin	

endif
ifeq ($(CONFIG_WNDR3700),y)
	mkdir -p $(ARCH)-uclibc/wndr3700/image
	mkdir -p $(ARCH)-uclibc/wndr3700v2/image
	mkdir -p $(ARCH)-uclibc/wndr3800/image
	./tools/wndr3700/wndr3700 \
		$(ARCH)-uclibc/root.uimage \
		$(ARCH)-uclibc/wndr3700/image/uImage

	./tools/wndr3700/wndr3700v2 \
		$(ARCH)-uclibc/root.uimage \
		$(ARCH)-uclibc/wndr3700v2/image/uImage

	./tools/wndr3700/wndr3700v2 \
		$(ARCH)-uclibc/root.uimage \
		$(ARCH)-uclibc/wndr3800/image/uImage

	./tools/wndr3700/mksquashfs-lzma \
		$(ARCH)-uclibc/wndr3700 $(ARCH)-uclibc/kernel.squashfs \
		-nopad -noappend -root-owned -be

	./tools/wndr3700/mksquashfs-lzma \
		$(ARCH)-uclibc/wndr3700v2 $(ARCH)-uclibc/kernelv2.squashfs \
		-nopad -noappend -root-owned -be

	./tools/wndr3700/mksquashfs-lzma \
		$(ARCH)-uclibc/wndr3800 $(ARCH)-uclibc/kernel3800.squashfs \
		-nopad -noappend -root-owned -be

	-rm -rf $(ARCH)-uclibc/wndr3700
	-rm -rf $(ARCH)-uclibc/wndr3700v2
	-rm -rf $(ARCH)-uclibc/wndr3800

	mkimage -A mips -O linux -T filesystem -C none \
		-a 0xbf070000 -e 0xbf070000 \
		-n 'WNDR3700-V1.0.4.68' \
		-d $(ARCH)-uclibc/kernel.squashfs \
		$(ARCH)-uclibc/kernel.uimage

	mkimage -A mips -O linux -T filesystem -C none \
		-a 0xbf070000 -e 0xbf070000 \
		-n 'WNDR3700v2-V1.0.4.68' \
		-d $(ARCH)-uclibc/kernelv2.squashfs \
		$(ARCH)-uclibc/kernelv2.uimage

	mkimage -A mips -O linux -T filesystem -C none \
		-a 0xbf070000 -e 0xbf070000 \
		-n 'WNDR3800-V1.0.4.68' \
		-d $(ARCH)-uclibc/kernel3800.squashfs \
		$(ARCH)-uclibc/kernel3800.uimage

	./tools/wndr3700/wndr3700v2 \
		$(ARCH)-uclibc/kernelv2.uimage \
		$(ARCH)-uclibc/kernelv2.image	

	./tools/wndr3700/wndr3700 \
		$(ARCH)-uclibc/kernel.uimage \
		$(ARCH)-uclibc/kernel.image	

	./tools/wndr3700/wndr3700v2 \
		$(ARCH)-uclibc/kernel3800.uimage \
		$(ARCH)-uclibc/kernel3800.image	
	( \
		dd if=$(ARCH)-uclibc/kernel.image bs=1024k conv=sync; \
		dd if=$(ARCH)-uclibc/root.fs bs=64k; \
	) > $(ARCH)-uclibc/wndr3700-uimage.bin

	( \
		dd if=$(ARCH)-uclibc/kernelv2.image bs=1024k conv=sync; \
		dd if=$(ARCH)-uclibc/root.fs bs=64k; \
	) > $(ARCH)-uclibc/wndr3700v2-uimage.bin

	( \
		dd if=$(ARCH)-uclibc/kernel3800.image bs=1024k conv=sync; \
		dd if=$(ARCH)-uclibc/root.fs bs=64k; \
	) > $(ARCH)-uclibc/wndr3800-uimage.bin

	./tools/wndr3700/mkdniimg -B WNDR3700 -v 1.0.4.68 -r NA -i $(ARCH)-uclibc/wndr3700-uimage.bin -o $(ARCH)-uclibc/wndr3700-factory_NA.img
	./tools/wndr3700/mkdniimg -B WNDR3700 -v 1.0.4.68 -r "" -i $(ARCH)-uclibc/wndr3700-uimage.bin -o $(ARCH)-uclibc/wndr3700-factory_WW.img
	./tools/wndr3700/mkdniimg -B WNDR3700v2 -v 1.0.4.68 -r NA -i $(ARCH)-uclibc/wndr3700v2-uimage.bin -o $(ARCH)-uclibc/wndr3700v2-factory_NA.img
	./tools/wndr3700/mkdniimg -B WNDR3700v2 -v 1.0.4.68 -r "" -i $(ARCH)-uclibc/wndr3700v2-uimage.bin -o $(ARCH)-uclibc/wndr3700v2-factory_WW.img
	./tools/wndr3700/mkdniimg -B WNDR3800 -v 1.0.4.68 -r NA -i $(ARCH)-uclibc/wndr3800-uimage.bin -o $(ARCH)-uclibc/wndr3800-factory_NA.img
	./tools/wndr3700/mkdniimg -B WNDR3800 -v 1.0.4.68 -r "" -i $(ARCH)-uclibc/wndr3800-uimage.bin -o $(ARCH)-uclibc/wndr3800-factory_WW.img
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/wndr3700-webflash.bin $(ARCH)-uclibc/wndr3700-uimage.bin	
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/wndr3700v2-webflash.bin $(ARCH)-uclibc/wndr3700v2-uimage.bin	
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/wndr3800-webflash.bin $(ARCH)-uclibc/wndr3800-uimage.bin	
endif
ifeq ($(CONFIG_TEW632BRP),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/tew632brp-uimage.bin
	cat tools/tew632brp.tag >> $(ARCH)-uclibc/tew632brp-uimage.bin
	
endif
ifeq ($(CONFIG_TEW652BRP),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/tew652brp-uimage.bin
	cat tools/tew652brp.tag >> $(ARCH)-uclibc/tew652brp-uimage.bin
	
endif
ifeq ($(CONFIG_DIR615C1),y)
	cp $(ARCH)-uclibc/aligned.uimage $(ARCH)-uclibc/dir615c1-uimage.bin
	cat tools/dir615c2.tag >> $(ARCH)-uclibc/dir615c1-uimage.bin
	
endif
ifeq ($(CONFIG_DIR632),y)
	dd if=$(ARCH)-uclibc/aligned.uimage of=$(ARCH)-uclibc/dir632-uimage.bin bs=7667712 conv=sync
	cat tools/dir632na.tag >> $(ARCH)-uclibc/dir632-uimage.bin
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/dir632-firmware.bin $(ARCH)-uclibc/dir632-uimage.bin	
endif
ifeq ($(CONFIG_DIR615E),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/aligned.uimage bs=4096 conv=sync
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	dd if=$(ARCH)-uclibc/aligned.uimage of=$(ARCH)-uclibc/dir615e1-uimage.bin bs=3538944 conv=sync
	cat tools/dir615e1.tag >> $(ARCH)-uclibc/dir615e1-uimage.bin
	dd if=$(ARCH)-uclibc/aligned.uimage of=$(ARCH)-uclibc/dir615e3-uimage.bin bs=3538944 conv=sync
	cat tools/dir615e3.tag >> $(ARCH)-uclibc/dir615e3-uimage.bin
	dd if=$(ARCH)-uclibc/aligned.uimage of=$(ARCH)-uclibc/dir615e4-uimage.bin bs=3538944 conv=sync
	cat tools/dir615e4.tag >> $(ARCH)-uclibc/dir615e4-uimage.bin
	dd if=$(ARCH)-uclibc/aligned.uimage of=$(ARCH)-uclibc/dir601-uimage.bin bs=3735552 conv=sync
	cat tools/dir601.tag >> $(ARCH)-uclibc/dir601-uimage.bin
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap93-firmware.bin $(ARCH)-uclibc/aligned.uimage	
endif
ifeq ($(CONFIG_WRT160NL),y)
	./tools/wrt160nl/pad $(ARCH)-uclibc/root.uimage $(ARCH)-uclibc/aligned.uimage
	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
	./tools/wrt160nl/trx -m 40000000 -o $(ARCH)-uclibc/wrt160nl-firmware.trx -f $(ARCH)-uclibc/aligned.uimage
	./tools/wrt160nl/trx -m 40000000 -o $(ARCH)-uclibc/e2100l-firmware.trx -f $(ARCH)-uclibc/aligned.uimage
	./tools/wrt160nl/addpattern -B WRT160NL -v v1.00.20 -i $(ARCH)-uclibc/wrt160nl-firmware.trx -o $(ARCH)-uclibc/wrt160nl-firmware.bin -g
	./tools/wrt160nl/addpattern -B E2100L -v v1.00.20 -i $(ARCH)-uclibc/e2100l-firmware.trx -o $(ARCH)-uclibc/e2100l-firmware.bin -g
endif
ifeq ($(CONFIG_TG2521),y)
#	./tools/wrt160nl/pad $(ARCH)-uclibc/root.uimage $(ARCH)-uclibc/aligned.uimage
#	cat $(ARCH)-uclibc/root.fs  >> $(ARCH)-uclibc/aligned.uimage
#	./tools/wrt160nl/trx -m 30000000 -o $(ARCH)-uclibc/wrt160nl-firmware.trx -f $(ARCH)-uclibc/aligned.uimage
#	./tools/wrt160nl/addpattern -B WRT160NL -v v1.00.20 -i $(ARCH)-uclibc/wrt160nl-firmware.trx -o $(ARCH)-uclibc/wrt160nl-firmware.bin -g
	./tools/zcom/makefirmware $(ARCH)-uclibc/zcom-firmware.img $(ARCH)-uclibc/root.uimage $(ARCH)-uclibc/root.fs TG2521
	dd if=$(ARCH)-uclibc/root.fs of=$(ARCH)-uclibc/root.zcom bs=6356992 conv=sync
	cat $(ARCH)-uclibc/root.uimage >> $(ARCH)-uclibc/root.zcom
	./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/zcom-firmware.bin $(ARCH)-uclibc/root.zcom
endif

ifeq ($(CONFIG_WR1043),y)
	make -C lzma-loader/pb42 clean
	make -C lzma-loader/pb42
	cp lzma-loader/pb42/loader.bin.gz $(ARCH)-uclibc/vmlinus.gzip
	./tools/tplink/mktplinkfw -B TL-WR1043NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-firmware.bin
	./tools/trx_n  -m 40000000 -o $(ARCH)-uclibc/ap83-firmware.bin mips-uclibc/tplink-firmware.bin
endif


ifeq ($(CONFIG_WR941),y)
	make -C lzma-loader/pb42 clean
	make -C lzma-loader/pb42
	cp lzma-loader/pb42/loader.bin.gz $(ARCH)-uclibc/vmlinus.gzip
	./tools/tplink/mktplinkfw -B TL-WR941NDv2 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR941NDv2-firmware.bin
	./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR941NDv2-firmware.bin mips-uclibc/tplink-WR941NDv2-firmware.bin

	./tools/tplink/mktplinkfw -B TL-WR841NDv3 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR841NDv3-firmware.bin
	./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR841NDv3-firmware.bin mips-uclibc/tplink-WR841NDv3-firmware.bin

endif
ifeq ($(CONFIG_WR741),y)
	make -C lzma-loader/pb42 clean
	make -C lzma-loader/pb42
	cp lzma-loader/pb42/loader.bin.gz $(ARCH)-uclibc/vmlinus.gzip
	-./tools/tplink/mktplinkfw -B TL-WR741NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR741NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR741NDv1-firmware.bin mips-uclibc/tplink-WR741NDv1-firmware.bin

	-./tools/tplink/mktplinkfw -B AIP-W411 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/alfa-AIP-W411-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/AIP-W411-firmware.bin mips-uclibc/alfa-AIP-W411-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR741NDv4 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinux.lzma -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR741NDv4-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR741NDv4-firmware.bin mips-uclibc/tplink-WR741NDv4-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR740NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR740NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR740NDv1-firmware.bin mips-uclibc/tplink-WR740NDv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR740NDv4 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinux.lzma -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR740NDv4-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR740NDv4-firmware.bin mips-uclibc/tplink-WR740NDv4-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR842NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR842NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR842NDv1-firmware.bin mips-uclibc/tplink-WR842NDv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR703Nv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinux.lzma -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR703Nv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR703Nv1-firmware.bin mips-uclibc/tplink-WR703Nv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-MR3020 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinux.lzma -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-MR3020-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/MR3020-firmware.bin mips-uclibc/tplink-MR3020-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR740NDv3 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR740NDv3-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR740NDv3-firmware.bin mips-uclibc/tplink-WR740NDv3-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR740NDv3WW -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR740NDv3ww-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR740NDv3ww-firmware.bin mips-uclibc/tplink-WR740NDv3ww-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR743NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR743NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR743NDv1-firmware.bin mips-uclibc/tplink-WR743NDv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR841NDv5 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR841NDv5-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR841NDv5-firmware.bin mips-uclibc/tplink-WR841NDv5-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR841NDv7 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR841NDv7-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR841NDv7-firmware.bin mips-uclibc/tplink-WR841NDv7-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-MR3420 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-MR3420-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/MR3420-firmware.bin mips-uclibc/tplink-MR3420-firmware.bin

	-./tools/tplink/mktplinkfw -B RNX-N300RT -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/rosewill-RNX-N300RT-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/RNX-N300RT-firmware.bin mips-uclibc/rosewill-RNX-N300RT-firmware.bin

	-./tools/tplink/mktplinkfw -B RNX-N150RT -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/rosewill-RNX-N150RT-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/RNX-N150RT-firmware.bin mips-uclibc/rosewill-RNX-N150RT-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR840Nv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR840Nv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR840Nv1-firmware.bin mips-uclibc/tplink-WR840Nv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WR941NDv4 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WR941NDv4-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WR941NDv4-firmware.bin mips-uclibc/tplink-WR941NDv4-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WA901NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WA901NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WA901NDv1-firmware.bin mips-uclibc/tplink-WA901NDv1-firmware.bin

	-./tools/tplink/mktplinkfw -B TL-WA801NDv1 -N DD-WRT -V 24 -k $(ARCH)-uclibc/vmlinus.gzip -r $(ARCH)-uclibc/root.fs -o mips-uclibc/tplink-WA801NDv1-firmware.bin
	-./tools/trx_n -m 40000000 -o $(ARCH)-uclibc/WA801NDv1-firmware.bin mips-uclibc/tplink-WA801NDv1-firmware.bin
endif
ifeq ($(CONFIG_WRT400),y)
	dd if=$(ARCH)-uclibc/root.uimage of=$(ARCH)-uclibc/root.wrt400 bs=1048576 conv=sync
	./tools/wrt400/wrt400 $(ARCH)-uclibc/root.wrt400 $(ARCH)-uclibc/root.fs $(ARCH)-uclibc/wrt400-firmware.bin
endif


include rules/all.mk

.PHONY: all clean distclean mrproper install package
.PHONY: conf mconf oldconf kconf kmconf config menuconfig oldconfig
.PHONY: dummy fixkc libnet libpcap



