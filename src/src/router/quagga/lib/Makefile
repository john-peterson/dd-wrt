# Makefile.in generated by automake 1.7.9 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/quagga
pkglibdir = $(libdir)/quagga
pkgincludedir = $(includedir)/quagga
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = mipsel-unknown-linux-gnu
ACLOCAL = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run tar
AR = mipsel-linux-ar
AUTOCONF = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run automake-1.7
AWK = gawk
BGPD = 
CC = mipsel-linux-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O1 -Wall
CONFDATE = 20040929
CPP = mipsel-linux-gcc -E
CPPFLAGS = 
CURSES = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -DSYSCONFDIR=\"$(sysconfdir)/\"
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
IF_METHOD = if_netlink.o
IF_PROC = if_proc.o

INCLUDES =  -I.. -I$(top_srcdir) -I$(top_srcdir)/lib
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IPFORWARD = ipforward_proc.o
ISISD = isisd
KERNEL_METHOD = 
LDFLAGS = 
LIBCAP = 
LIBOBJS = 
LIBPAM = 
LIBS = -lm -lcrypt 
LIB_IPV6 = 
LIB_REGEX = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/missing --run makeinfo
MULTIPATH_NUM = 1
OBJEXT = o
OSPF6D = 
OSPFAPI = 
OSPFCLIENT = 
OSPFD = ospfd
OTHER_METHOD = 
PACKAGE = quagga
PACKAGE_BUGREPORT = http://bugzilla.quagga.net
PACKAGE_NAME = quagga
PACKAGE_STRING = quagga 0.96.5
PACKAGE_TARNAME = quagga
PACKAGE_VERSION = 0.96.5
PATH_SEPARATOR = :
RANLIB = mipsel-linux-ranlib
RIPD = ripd
RIPNGD = 
RTREAD_METHOD = rtread_netlink.o
RT_METHOD = rt_netlink.o
SET_MAKE = 
SHELL = /bin/sh
STRIP = mipsel-linux-strip
VERSION = 0.96.5
VTYSH = 
ZEBRA = zebra
ac_ct_AR = 
ac_ct_CC = 
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exampledir = ${prefix}/etc
exec_prefix = ${prefix}
host = mipsel-unknown-linux-gnu
host_alias = mipsel-linux
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
includedir = /opt/brcm/hndtools-mipsel-uclibc/
infodir = ${prefix}/info
install_sh = /usr/src/linksys/cvs_work/alchemy/scratch/HEAD/WRT54G/src/router/quagga/install-sh
libdir = /opt/brcm/hndtools-mipsel-uclibc/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/sbin/zebra
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

lib_LIBRARIES = libzebra.a

libzebra_a_SOURCES = \
	version.c network.c pid_output.c getopt.c getopt1.c daemon.c \
	print_version.c checksum.c vector.c linklist.c vty.c command.c \
	sockunion.c prefix.c thread.c if.c memory.c buffer.c table.c hash.c \
	filter.c routemap.c distribute.c stream.c str.c log.c plist.c \
	zclient.c sockopt.c smux.c md5.c if_rmap.c keychain.c privs.c \
	debug.c sigevent.c


libzebra_a_DEPENDENCIES = 

libzebra_a_LIBADD = 

pkginclude_HEADERS = \
	buffer.h command.h filter.h getopt.h hash.h if.h linklist.h log.h \
	memory.h network.h prefix.h routemap.h distribute.h sockunion.h \
	str.h stream.h table.h thread.h vector.h version.h vty.h zebra.h \
	plist.h zclient.h sockopt.h smux.h md5-gnu.h if_rmap.h keychain.h \
	privs.h debug.h sigevent.h


EXTRA_DIST = regex.c regex-gnu.h
subdir = lib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = version.h
LIBRARIES = $(lib_LIBRARIES)

libzebra_a_AR = $(AR) cru
am_libzebra_a_OBJECTS = version.$(OBJEXT) network.$(OBJEXT) \
	pid_output.$(OBJEXT) getopt.$(OBJEXT) getopt1.$(OBJEXT) \
	daemon.$(OBJEXT) print_version.$(OBJEXT) checksum.$(OBJEXT) \
	vector.$(OBJEXT) linklist.$(OBJEXT) vty.$(OBJEXT) \
	command.$(OBJEXT) sockunion.$(OBJEXT) prefix.$(OBJEXT) \
	thread.$(OBJEXT) if.$(OBJEXT) memory.$(OBJEXT) buffer.$(OBJEXT) \
	table.$(OBJEXT) hash.$(OBJEXT) filter.$(OBJEXT) \
	routemap.$(OBJEXT) distribute.$(OBJEXT) stream.$(OBJEXT) \
	str.$(OBJEXT) log.$(OBJEXT) plist.$(OBJEXT) zclient.$(OBJEXT) \
	sockopt.$(OBJEXT) smux.$(OBJEXT) md5.$(OBJEXT) \
	if_rmap.$(OBJEXT) keychain.$(OBJEXT) privs.$(OBJEXT) \
	debug.$(OBJEXT) sigevent.$(OBJEXT)
libzebra_a_OBJECTS = $(am_libzebra_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/buffer.Po ./$(DEPDIR)/checksum.Po \
	./$(DEPDIR)/command.Po ./$(DEPDIR)/daemon.Po \
	./$(DEPDIR)/debug.Po ./$(DEPDIR)/distribute.Po \
	./$(DEPDIR)/filter.Po ./$(DEPDIR)/getopt.Po \
	./$(DEPDIR)/getopt1.Po ./$(DEPDIR)/hash.Po \
	./$(DEPDIR)/if.Po ./$(DEPDIR)/if_rmap.Po \
	./$(DEPDIR)/keychain.Po ./$(DEPDIR)/linklist.Po \
	./$(DEPDIR)/log.Po ./$(DEPDIR)/md5.Po \
	./$(DEPDIR)/memory.Po ./$(DEPDIR)/network.Po \
	./$(DEPDIR)/pid_output.Po ./$(DEPDIR)/plist.Po \
	./$(DEPDIR)/prefix.Po ./$(DEPDIR)/print_version.Po \
	./$(DEPDIR)/privs.Po ./$(DEPDIR)/routemap.Po \
	./$(DEPDIR)/sigevent.Po ./$(DEPDIR)/smux.Po \
	./$(DEPDIR)/sockopt.Po ./$(DEPDIR)/sockunion.Po \
	./$(DEPDIR)/str.Po ./$(DEPDIR)/stream.Po \
	./$(DEPDIR)/table.Po ./$(DEPDIR)/thread.Po \
	./$(DEPDIR)/vector.Po ./$(DEPDIR)/version.Po \
	./$(DEPDIR)/vty.Po ./$(DEPDIR)/zclient.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libzebra_a_SOURCES)
HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.in ChangeLog \
	Makefile.am version.h.in
SOURCES = $(libzebra_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  lib/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
version.h: $(top_builddir)/config.status version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libzebra.a: $(libzebra_a_OBJECTS) $(libzebra_a_DEPENDENCIES) 
	-rm -f libzebra.a
	$(libzebra_a_AR) libzebra.a $(libzebra_a_OBJECTS) $(libzebra_a_LIBADD)
	$(RANLIB) libzebra.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/buffer.Po
include ./$(DEPDIR)/checksum.Po
include ./$(DEPDIR)/command.Po
include ./$(DEPDIR)/daemon.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/distribute.Po
include ./$(DEPDIR)/filter.Po
include ./$(DEPDIR)/getopt.Po
include ./$(DEPDIR)/getopt1.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/if.Po
include ./$(DEPDIR)/if_rmap.Po
include ./$(DEPDIR)/keychain.Po
include ./$(DEPDIR)/linklist.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/md5.Po
include ./$(DEPDIR)/memory.Po
include ./$(DEPDIR)/network.Po
include ./$(DEPDIR)/pid_output.Po
include ./$(DEPDIR)/plist.Po
include ./$(DEPDIR)/prefix.Po
include ./$(DEPDIR)/print_version.Po
include ./$(DEPDIR)/privs.Po
include ./$(DEPDIR)/routemap.Po
include ./$(DEPDIR)/sigevent.Po
include ./$(DEPDIR)/smux.Po
include ./$(DEPDIR)/sockopt.Po
include ./$(DEPDIR)/sockunion.Po
include ./$(DEPDIR)/str.Po
include ./$(DEPDIR)/stream.Po
include ./$(DEPDIR)/table.Po
include ./$(DEPDIR)/thread.Po
include ./$(DEPDIR)/vector.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/vty.Po
include ./$(DEPDIR)/zclient.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES uninstall-pkgincludeHEADERS


version.c: Makefile
	echo '' >version.c
	echo 'char *host_name = "$(host_alias)";' >>version.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
