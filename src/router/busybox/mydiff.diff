diff -urN busybox-1.3.1/Makefile busybox/Makefile
--- busybox-1.3.1/Makefile	2006-12-27 05:57:17.000000000 +0100
+++ busybox/Makefile	2007-01-04 17:12:48.000000000 +0100
@@ -567,7 +567,7 @@
 # May be overridden by arch/$(ARCH)/Makefile
 quiet_cmd_busybox__ ?= LINK    $@
 ifdef CONFIG_STATIC
-      cmd_busybox__ ?= $(srctree)/scripts/trylink $(CC) $(LDFLAGS) \
+      cmd_busybox__ ?= $(srctree)/scripts/trylink $(CC) $(LDFLAGS) $(LIBRARIES) \
       -static \
       -o $@ \
       -Wl,--warn-common -Wl,--sort-common -Wl,--gc-sections \
@@ -575,7 +575,7 @@
 else
       cmd_busybox__ ?= $(srctree)/scripts/trylink $(CC) -o $@ $(LDFLAGS) \
       -Wl,--warn-common -Wl,--sort-common -Wl,--gc-sections \
-      -Wl,--start-group $(busybox-all) -Wl,--end-group
+      -Wl,--start-group $(busybox-all) $(LIBRARIES) -Wl,--end-group
 endif
 
 # Generate System.map
diff -urN busybox-1.3.1/Makefile.flags busybox/Makefile.flags
--- busybox-1.3.1/Makefile.flags	2006-12-27 05:57:07.000000000 +0100
+++ busybox/Makefile.flags	2007-01-04 17:12:48.000000000 +0100
@@ -1,6 +1,11 @@
 # ==========================================================================
 # Build system
 # ==========================================================================
+ifndef top_builddir
+top_builddir=$(CURDIR)
+endif
+
+include $(top_builddir)/../.config
 
 BB_VER = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 
@@ -16,7 +21,7 @@
 	-D"BB_VER=KBUILD_STR($(BB_VER))" -DBB_BT=AUTOCONF_TIMESTAMP
 
 CFLAGS += \
-	-Wall -Wstrict-prototypes -Wshadow -Werror -Wundef \
+	 -Wstrict-prototypes -Wshadow -Wall -Wundef \
 	-funsigned-char -fno-builtin-strlen -finline-limit=0 -static-libgcc \
 	-Os -falign-functions=1 -falign-jumps=1 -falign-loops=1 \
 	-fomit-frame-pointer -ffunction-sections -fdata-sections
@@ -26,3 +31,56 @@
 LDFLAGS += -g
 endif
 
+
+LDFLAGS	+= -L../nvram -L../mipsel-uclibc/install/nvram/usr/lib -L../shared -L../mipsel-uclibc/install/shared/usr/lib -L../libnet/lib  
+#LIBRARIES += ../dnsmasq/src/dnsmasq.a -lnvram -lnet
+ifeq ($(CONFIG_ARP),y)
+LIBRARIES += ../net-tools/arp.a ../net-tools/lib/libnet-tools.a		
+CFLAGS += -DHAVE_ARP
+endif
+ifeq ($(CONFIG_DROPBEAR_SSHD),y)
+#OBJS += sshd.o
+CFLAGS += -DHAVE_SSHD
+LIBRARIES += -L../zlib ../dropbear/dropbear.a ../dropbear/libtomcrypt/libtomcrypt.a ../dropbear/libtommath/libtommath.a -lutil -lz 
+#LDFLAGS += -Wl,--gc-sections
+endif
+ifeq ($(CONFIG_RFLOW),y)
+CFLAGS += -DHAVE_RFLOW
+LIBRARIES += ../rflow/rflow.a 
+LDFLAGS += -lpthread
+endif
+ifeq ($(CONFIG_DHCPFORWARD),y)
+CFLAGS += -DHAVE_DHCPFWD
+LIBRARIES += ../dhcpforwarder/dhcpfwd.a
+LDFLAGS += -lpthread
+endif
+ifeq ($(CONFIG_NOMESSAGE),y)
+CFLAGS += -DHAVE_NOMESSAGE
+endif
+ifeq ($(CONFIG_BIRD),y)
+CFLAGS += -DHAVE_BIRD
+LIBRARIES += ../bird/bird.a
+LIBRARIES += ../bird/obj/lib/birdlib.a
+endif
+ifeq ($(CONFIG_BRANDING),y)
+CFLAGS += -DHAVE_BRANDING
+endif
+
+#LDFLAGS += ../wireless-tools/libiw.so.29
+
+#ifeq ($(CONFIG_HTTPD),y)
+#CFLAGS += -DHAVE_DDWRTHTTPD
+#LIBRARIES += ../httpd/httpd.a
+#endif
+
+#ifeq ($(CONFIG_MATRIXSSL),y)
+#LIBRARIES += ../matrixssl/src/libmatrixsslstatic.a -lpthread
+#CFLAGS += -I$(TOP)/matrixssl
+#LDFLAGS += -L$(TOP)/matrixssl/src -lmatrixsslstatic -lpthread
+#CFLAGS += -DHAVE_MATRIXSSL
+#CFLAGS += -DHAVE_HTTPS
+#OBJS += matrixssl_xface.o
+#endif
+
+CFLAGS += -DNEED_PRINTF
+CFLAGS += $(COPTS)
diff -urN busybox-1.3.1/applets/applets.c busybox/applets/applets.c
--- busybox-1.3.1/applets/applets.c	2006-12-27 05:56:43.000000000 +0100
+++ busybox/applets/applets.c	2007-01-04 17:12:45.000000000 +0100
@@ -431,7 +431,7 @@
 #else
 #define unpack_usage_messages() usage_messages
 #endif /* ENABLE_FEATURE_COMPRESS_USAGE */
-
+#ifndef HAVE_NOMESSAGE
 void bb_show_usage(void)
 {
 	if (ENABLE_SHOW_USAGE) {
@@ -451,7 +451,7 @@
 
 	exit(xfunc_error_retval);
 }
-
+#endif
 static int applet_name_compare(const void *name, const void *vapplet)
 {
 	const struct BB_applet *applet = vapplet;
diff -urN busybox-1.3.1/applets/busybox.c busybox/applets/busybox.c
--- busybox-1.3.1/applets/busybox.c	2006-12-27 05:56:43.000000000 +0100
+++ busybox/applets/busybox.c	2007-01-04 17:12:45.000000000 +0100
@@ -55,10 +55,79 @@
 #define install_links(x,y)
 #endif /* CONFIG_FEATURE_INSTALLER */
 
+#ifdef HAVE_SSHD
+  extern int dropbearkey_main(int argc,char *argv[]);
+  extern int dropbearconvert_main(int argc,char *argv[]);
+  extern int dropbear_main(int argc,char *argv[]);
+  extern int cli_main(int argc,char *argv[]);
+  extern int scp_main(int argc,char *argv[]);
+#endif
+#ifdef HAVE_ARP
+  extern int arp_main(int argc,char *argv[]);
+#endif
+#ifdef HAVE_DHCPFWD
+  extern int dhcpforward_main(int argc,char *argv[]);
+#endif
+#ifdef HAVE_RFLOW
+  extern int rflow_main(int argc,char *argv[]);
+#endif
+#ifdef HAVE_BIRD
+  extern int bird_main(int argc,char *argv[]);
+#endif
 int main(int argc, char **argv)
 {
-	const char *s;
-
+const char *s;
+  char *base = strrchr (argv[0], '/');
+      
+  base = base ? base + 1 : argv[0];
+
+#ifdef HAVE_DHCPFWD
+
+  if (strstr (base, "dhcpfwd"))
+    return dhcpforward_main(argc,argv);
+#else
+  if (strstr (base, "blahblah"))
+    return puts(base);
+#endif
+/*#ifdef HAVE_PPP
+  else if (strstr (base, "pppd"))
+    return pppd_main(argc,argv);
+#endif*/
+#ifdef HAVE_RFLOW
+  else if (strstr (base, "rflow"))
+  {
+    return rflow_main(argc,argv);
+}
+#endif
+#ifdef HAVE_DDWRTHTTPD
+  extern int httpd_main(int argc,char *argv[]);
+  else if (strstr (base, "httpd"))
+    return httpd_main(argc,argv);
+#endif
+#ifdef HAVE_SSHD
+  else if (strstr (base, "dropbearkey"))
+    return dropbearkey_main(argc,argv);
+  else if (strstr (base, "dropbearkonvert"))
+    return dropbearconvert_main(argc,argv);
+  else if (strstr (base, "dropbear"))
+    return dropbear_main(argc,argv);
+  else if (strstr (base, "dbclient"))
+    return cli_main(argc,argv);
+  else if (strstr (base, "ssh"))
+    return cli_main(argc,argv);    
+  else if (strstr (base, "scp"))
+    return scp_main(argc,argv);
+#endif
+#ifdef HAVE_BIRD
+  else if (strstr (base, "bird"))
+    return bird_main(argc, argv);
+#endif    
+#ifdef HAVE_ARP
+  else if (!strcmp (base, "arp"))
+    return arp_main(argc,argv);
+#endif
+//  else if (strstr (base, "dnsmasq"))
+//    return dnsmasq_main(argc, argv);    
 	applet_name=argv[0];
 	if (*applet_name == '-') applet_name++;
 	for (s = applet_name; *s ;)
diff -urN busybox-1.3.1/e2fsprogs/e2fsck.c busybox/e2fsprogs/e2fsck.c
--- busybox-1.3.1/e2fsprogs/e2fsck.c	2006-12-27 05:55:58.000000000 +0100
+++ busybox/e2fsprogs/e2fsck.c	2007-01-04 17:12:41.000000000 +0100
@@ -12249,6 +12249,7 @@
 }
 
 #ifndef HAVE_CONIO_H
+/*
 static int read_a_char(void)
 {
 	char    c;
@@ -12267,16 +12268,17 @@
 			break;
 	}
 	return EOF;
-}
+}*/
 #endif
 
 static int ask_yn(const char * string, int def)
 {
-	int             c;
+/*	int             c;
 	const char      *defstr;
 	static const char short_yes[] = "yY";
-	static const char short_no[] = "nN";
-
+	static const char short_no[] = "nN";*/
+return 1;
+/*
 #ifdef HAVE_TERMIOS_H
 	struct termios  termios, tmp;
 
@@ -12329,7 +12331,7 @@
 #ifdef HAVE_TERMIOS_H
 	tcsetattr (0, TCSANOW, &termios);
 #endif
-	return def;
+	return def;*/
 }
 
 int ask (e2fsck_t ctx, const char * string, int def)
diff -urN busybox-1.3.1/include/applets.h busybox/include/applets.h
--- busybox-1.3.1/include/applets.h	2006-12-27 05:56:18.000000000 +0100
+++ busybox/include/applets.h	2007-01-04 17:12:44.000000000 +0100
@@ -316,7 +316,7 @@
 USE_VLOCK(APPLET(vlock, _BB_DIR_USR_BIN, _BB_SUID_ALWAYS))
 USE_WATCH(APPLET(watch, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_WATCHDOG(APPLET(watchdog, _BB_DIR_SBIN, _BB_SUID_NEVER))
-USE_WC(APPLET(wc, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
+USE_WC(APPLET(wc, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_WGET(APPLET(wget, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 USE_WHICH(APPLET(which, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 USE_WHO(APPLET(who, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
diff -urN busybox-1.3.1/include/libbb.h busybox/include/libbb.h
--- busybox-1.3.1/include/libbb.h	2006-12-27 05:56:18.000000000 +0100
+++ busybox/include/libbb.h	2007-01-04 17:12:44.000000000 +0100
@@ -363,6 +363,20 @@
 extern int logmode;
 extern int die_sleep;
 extern int xfunc_error_retval;
+
+#ifdef HAVE_NOMESSAGE
+#define bb_show_usage() exit(-1) 
+#define bb_error_msg(fmt, args...)
+#define bb_error_msg_and_die(fmt, arg...) exit(-1)
+#define bb_perror_msg(fmt, args...)
+#define bb_perror_msg_and_die(fmt, arg...) exit(-1)
+#define bb_vherror_msg(fmt,args...)
+#define bb_herror_msg(fmt, arg...)
+#define bb_herror_msg_and_die(fmt, arg...) exit(-1)
+#define bb_perror_nomsg_and_die() exit(-1)
+#define bb_perror_nomsg()
+#define bb_info_msg(fmt, arg...)
+#else
 extern void bb_show_usage(void) ATTRIBUTE_NORETURN ATTRIBUTE_EXTERNALLY_VISIBLE;
 extern void bb_error_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
 extern void bb_error_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2)));
@@ -374,6 +388,21 @@
 extern void bb_perror_nomsg_and_die(void) ATTRIBUTE_NORETURN;
 extern void bb_perror_nomsg(void);
 extern void bb_info_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
+#endif
+/*
+extern void bb_show_usage(void) ATTRIBUTE_NORETURN ATTRIBUTE_EXTERNALLY_VISIBLE;
+extern void bb_error_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
+extern void bb_error_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2)));
+extern void bb_perror_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
+extern void bb_perror_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2)));
+extern void bb_vherror_msg(const char *s, va_list p);
+extern void bb_herror_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
+extern void bb_herror_msg_and_die(const char *s, ...) __attribute__ ((noreturn, format (printf, 1, 2)));
+extern void bb_perror_nomsg_and_die(void) ATTRIBUTE_NORETURN;
+extern void bb_perror_nomsg(void);
+extern void bb_info_msg(const char *s, ...) __attribute__ ((format (printf, 1, 2)));
+*/
+
 /* These are used internally -- you shouldn't need to use them */
 extern void bb_verror_msg(const char *s, va_list p, const char *strerr);
 extern void bb_vperror_msg(const char *s, va_list p);
diff -urN busybox-1.3.1/libbb/error_msg.c busybox/libbb/error_msg.c
--- busybox-1.3.1/libbb/error_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/error_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -13,6 +13,7 @@
 #include <stdlib.h>
 #include "libbb.h"
 
+#ifndef HAVE_NOMESSAGE
 void bb_error_msg(const char *s, ...)
 {
 	va_list p;
@@ -21,3 +22,4 @@
 	bb_verror_msg(s, p, NULL);
 	va_end(p);
 }
+#endif
diff -urN busybox-1.3.1/libbb/error_msg_and_die.c busybox/libbb/error_msg_and_die.c
--- busybox-1.3.1/libbb/error_msg_and_die.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/error_msg_and_die.c	2007-01-04 17:12:38.000000000 +0100
@@ -14,6 +14,7 @@
 #include "libbb.h"
 
 int die_sleep;
+#ifndef HAVE_NOMESSAGE
 
 void bb_error_msg_and_die(const char *s, ...)
 {
@@ -26,3 +27,4 @@
 		sleep(die_sleep);
 	exit(xfunc_error_retval);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/herror_msg.c busybox/libbb/herror_msg.c
--- busybox-1.3.1/libbb/herror_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/herror_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -11,6 +11,7 @@
 #include <stdlib.h>
 
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_herror_msg(const char *s, ...)
 {
@@ -20,3 +21,4 @@
 	bb_vherror_msg(s, p);
 	va_end(p);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/herror_msg_and_die.c busybox/libbb/herror_msg_and_die.c
--- busybox-1.3.1/libbb/herror_msg_and_die.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/herror_msg_and_die.c	2007-01-04 17:12:38.000000000 +0100
@@ -11,6 +11,7 @@
 #include <stdlib.h>
 
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_herror_msg_and_die(const char *s, ...)
 {
@@ -23,3 +24,4 @@
 		sleep(die_sleep);
 	exit(xfunc_error_retval);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/info_msg.c busybox/libbb/info_msg.c
--- busybox-1.3.1/libbb/info_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/info_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -12,6 +12,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_info_msg(const char *s, ...)
 {
@@ -21,3 +22,4 @@
 	bb_vinfo_msg(s, p);
 	va_end(p);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/login.c busybox/libbb/login.c
--- busybox-1.3.1/libbb/login.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/login.c	2007-01-04 17:12:38.000000000 +0100
@@ -96,6 +96,17 @@
 void print_login_prompt(void)
 {
 	char buf[MAXHOSTNAMELEN+1];
+/* Login Prompt by BrainSlayer */
+  FILE *fp = fopen ("/tmp/loginprompt", "rb");
+  if (fp)
+    {    
+      while (!feof (fp))
+	{
+	  putc (getc (fp), stdout);
+	}
+      fclose (fp);
+    }
+  fputs("\n",stdout);
 
 	if (gethostname(buf, MAXHOSTNAMELEN) == 0)
 		fputs(buf, stdout);
diff -urN busybox-1.3.1/libbb/perror_msg.c busybox/libbb/perror_msg.c
--- busybox-1.3.1/libbb/perror_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/perror_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -12,6 +12,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_perror_msg(const char *s, ...)
 {
@@ -21,3 +22,4 @@
 	bb_vperror_msg(s, p);
 	va_end(p);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/perror_msg_and_die.c busybox/libbb/perror_msg_and_die.c
--- busybox-1.3.1/libbb/perror_msg_and_die.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/perror_msg_and_die.c	2007-01-04 17:12:38.000000000 +0100
@@ -12,6 +12,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_perror_msg_and_die(const char *s, ...)
 {
@@ -24,3 +25,4 @@
 		sleep(die_sleep);
 	exit(xfunc_error_retval);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/perror_nomsg.c busybox/libbb/perror_nomsg.c
--- busybox-1.3.1/libbb/perror_nomsg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/perror_nomsg.c	2007-01-04 17:12:38.000000000 +0100
@@ -11,9 +11,11 @@
  * modified definition without "attribute (format)"
  * instead of including libbb.h */
 //#include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 extern void bb_perror_msg(const char *s, ...);
 
 void bb_perror_nomsg(void)
 {
 	bb_perror_msg(0);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/perror_nomsg_and_die.c busybox/libbb/perror_nomsg_and_die.c
--- busybox-1.3.1/libbb/perror_nomsg_and_die.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/perror_nomsg_and_die.c	2007-01-04 17:12:38.000000000 +0100
@@ -11,9 +11,11 @@
  * modified definition without "attribute (format)"
  * instead of including libbb.h */
 //#include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 extern void bb_perror_msg_and_die(const char *s, ...);
 
 void bb_perror_nomsg_and_die(void)
 {
 	bb_perror_msg_and_die(0);
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/vherror_msg.c busybox/libbb/vherror_msg.c
--- busybox-1.3.1/libbb/vherror_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/vherror_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -8,8 +8,10 @@
  */
 
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_vherror_msg(const char *s, va_list p)
 {
 	bb_verror_msg(s, p, hstrerror(h_errno));
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libbb/vperror_msg.c busybox/libbb/vperror_msg.c
--- busybox-1.3.1/libbb/vperror_msg.c	2006-12-27 05:55:04.000000000 +0100
+++ busybox/libbb/vperror_msg.c	2007-01-04 17:12:38.000000000 +0100
@@ -8,8 +8,10 @@
  */
 
 #include "libbb.h"
+#ifndef HAVE_NOMESSAGE
 
 void bb_vperror_msg(const char *s, va_list p)
 {
 	bb_verror_msg(s, p, strerror(errno));
 }
+#endif
\ No newline at end of file
diff -urN busybox-1.3.1/libpwdgrp/pwd_grp.c busybox/libpwdgrp/pwd_grp.c
--- busybox-1.3.1/libpwdgrp/pwd_grp.c	2006-12-27 05:56:32.000000000 +0100
+++ busybox/libpwdgrp/pwd_grp.c	2007-01-04 17:12:45.000000000 +0100
@@ -28,6 +28,7 @@
 #include <errno.h>
 #include <assert.h>
 #include <ctype.h>
+#include <shadow.h>
 
 #ifndef _PATH_SHADOW
 #define	_PATH_SHADOW	"/etc/shadow"
diff -urN busybox-1.3.1/miscutils/crond.c busybox/miscutils/crond.c
--- busybox-1.3.1/miscutils/crond.c	2006-12-27 05:56:09.000000000 +0100
+++ busybox/miscutils/crond.c	2007-01-04 17:12:41.000000000 +0100
@@ -1,19 +1,37 @@
-/* vi: set sw=4 ts=4: */
 /*
  * crond -d[#] -c <crondir> -f -b
  *
  * run as root, but NOT setuid root
  *
  * Copyright 1994 Matthew Dillon (dillon@apollo.west.oic.com)
- * Vladimir Oleynik <dzo@simtreas.ru> (C) 2002
+ * May be distributed under the GNU General Public License
  *
- * Licensed under the GPL v2 or later, see the file LICENSE in this tarball.
+ * Vladimir Oleynik <dzo@simtreas.ru> (C) 2002 to be used in busybox
  */
 
 #define VERSION "2.3.2"
 
+#undef FEATURE_DEBUG_OPT
+
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <errno.h>
+#include <time.h>
+#include <dirent.h>
+#include <fcntl.h>
+#include <unistd.h>
+#include <syslog.h>
+#include <signal.h>
+#include <getopt.h>
+#include <sys/ioctl.h>
+#include <sys/wait.h>
+#include <sys/stat.h>
+#include <sys/resource.h>
+
 #include "busybox.h"
-#include <sys/syslog.h>
 
 #define arysize(ary)    (sizeof(ary)/sizeof((ary)[0]))
 
@@ -64,11 +82,11 @@
 
 #define DaemonUid 0
 
-#if ENABLE_DEBUG_CROND_OPTION
-static unsigned DebugOpt;
+#ifdef FEATURE_DEBUG_OPT
+static short DebugOpt;
 #endif
 
-static unsigned LogLevel = 8;
+static short LogLevel = 99;
 static const char *LogFile;
 static const char *CDir = CRONTABS;
 
@@ -82,7 +100,7 @@
 
 static void RunJob(const char *user, CronLine * line);
 
-#if ENABLE_FEATURE_CROND_CALL_SENDMAIL
+#ifdef CONFIG_FEATURE_CROND_CALL_SENDMAIL
 static void EndJob(const char *user, CronLine * line);
 #else
 #define EndJob(user, line)  line->cl_Pid = 0
@@ -106,7 +124,7 @@
 	fmt = ctl + 1;
 	if (level >= LogLevel) {
 
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 		if (DebugOpt) {
 			vfprintf(stderr, fmt, va);
 		} else
@@ -118,9 +136,9 @@
 			if (logfd >= 0) {
 				vdprintf(logfd, fmt, va);
 				close(logfd);
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 			} else {
-				bb_perror_msg("can't open log file");
+				bb_perror_msg("Can't open log file");
 #endif
 			}
 		}
@@ -133,29 +151,29 @@
 
 int crond_main(int ac, char **av)
 {
-	unsigned opt;
+	unsigned long opt;
 	char *lopt, *Lopt, *copt;
 
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 	char *dopt;
 
-	opt_complementary = "f-b:b-f:S-L:L-S:d-l";
+	bb_opt_complementally = "f-b:b-f:S-L:L-S:d-l";
 #else
-	opt_complementary = "f-b:b-f:S-L:L-S";
+	bb_opt_complementally = "f-b:b-f:S-L:L-S";
 #endif
 
 	opterr = 0;			/* disable getopt 'errors' message. */
-	opt = getopt32(ac, av, "l:L:fbSc:"
-#if ENABLE_DEBUG_CROND_OPTION
+	opt = bb_getopt_ulflags(ac, av, "l:L:fbSc:"
+#ifdef FEATURE_DEBUG_OPT
 							"d:"
 #endif
 							, &lopt, &Lopt, &copt
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 							, &dopt
 #endif
 		);
 	if (opt & 1) {
-		LogLevel = xatou(lopt);
+		LogLevel = atoi(lopt);
 	}
 	if (opt & 2) {
 		if (*Lopt != 0) {
@@ -167,9 +185,9 @@
 			CDir = copt;
 		}
 	}
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 	if (opt & 64) {
-		DebugOpt = xatou(dopt);
+		DebugOpt = atoi(dopt);
 		LogLevel = 0;
 	}
 #endif
@@ -178,7 +196,9 @@
 	 * change directory
 	 */
 
-	xchdir(CDir);
+	if (chdir(CDir) != 0) {
+		bb_perror_msg_and_die("%s", CDir);
+	}
 	signal(SIGHUP, SIG_IGN);	/* hmm.. but, if kill -HUP original
 								 * version - his died. ;(
 								 */
@@ -189,12 +209,14 @@
 	 */
 
 	if (!(opt & 4)) {
-#ifdef BB_NOMMU
+#if defined(__uClinux__)
 		/* reexec for vfork() do continue parent */
 		vfork_daemon_rexec(1, 0, ac, av, "-f");
-#else
-		xdaemon(1, 0);
-#endif
+#else							/* uClinux */
+		if (daemon(1, 0) < 0) {
+			bb_perror_msg_and_die("daemon");
+		}
+#endif							/* uClinux */
 	}
 
 	(void) startlogger();	/* need if syslog mode selected */
@@ -205,7 +227,7 @@
 	 */
 
 	crondlog("\011%s " VERSION " dillon, started, log level %d\n",
-			 applet_name, LogLevel);
+			 bb_applet_name, LogLevel);
 
 	SynchronizeDir();
 
@@ -213,7 +235,7 @@
 		time_t t1 = time(NULL);
 		time_t t2;
 		long dt;
-		int rescan = 60;
+		int rescan = 2;
 		short sleep_time = 60;
 
 		for (;;) {
@@ -240,11 +262,11 @@
 			 */
 
 			if (--rescan == 0) {
-				rescan = 60;
+				rescan = 2;
 				SynchronizeDir();
 			}
 			CheckUpdates();
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 			if (DebugOpt)
 				crondlog("\005Wakeup dt=%d\n", dt);
 #endif
@@ -264,9 +286,24 @@
 			}
 		}
 	}
-	return 0; /* not reached */
+	/* not reached */
 }
 
+#if defined(FEATURE_DEBUG_OPT) || defined(CONFIG_FEATURE_CROND_CALL_SENDMAIL)
+/*
+    write to temp file..
+*/
+static void fdprintf(int fd, const char *ctl, ...)
+{
+	va_list va;
+
+	va_start(va, ctl);
+	vdprintf(fd, ctl, va);
+	va_end(va);
+}
+#endif
+
+
 static int ChangeUser(const char *user)
 {
 	struct passwd *pas;
@@ -278,9 +315,9 @@
 	pas = getpwnam(user);
 	if (pas == 0) {
 		crondlog("\011failed to get uid for %s", user);
-		return -1;
+		return (-1);
 	}
-	setenv("USER", pas->pw_name, 1);
+	setenv("USER", "root", 1);
 	setenv("HOME", pas->pw_dir, 1);
 	setenv("SHELL", DEFAULT_SHELL, 1);
 
@@ -290,31 +327,31 @@
 	err_msg = change_identity_e2str(pas);
 	if (err_msg) {
 		crondlog("\011%s for user %s", err_msg, user);
-		return -1;
+		return (-1);
 	}
 	if (chdir(pas->pw_dir) < 0) {
 		crondlog("\011chdir failed: %s: %m", pas->pw_dir);
 		if (chdir(TMPDIR) < 0) {
 			crondlog("\011chdir failed: %s: %m", TMPDIR);
-			return -1;
+			return (-1);
 		}
 	}
-	return pas->pw_uid;
+	return (pas->pw_uid);
 }
 
 static void startlogger(void)
 {
 	if (LogFile == 0) {
-		openlog(applet_name, LOG_CONS | LOG_PID, LOG_CRON);
+		openlog(bb_applet_name, LOG_CONS | LOG_PID, LOG_CRON);
 	}
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 	else {				/* test logfile */
 		int logfd;
 
 		if ((logfd = open(LogFile, O_WRONLY | O_CREAT | O_APPEND, 0600)) >= 0) {
 			close(logfd);
 		} else {
-			bb_perror_msg("failed to open log file '%s': ", LogFile);
+			bb_perror_msg("Failed to open log file '%s' reason", LogFile);
 		}
 	}
 #endif
@@ -377,7 +414,7 @@
 	int n2 = -1;
 
 	if (base == NULL) {
-		return NULL;
+		return (NULL);
 	}
 
 	while (*ptr != ' ' && *ptr != '\t' && *ptr != '\n') {
@@ -420,7 +457,7 @@
 
 		if (skip == 0) {
 			crondlog("\111failed user %s parsing %s\n", user, base);
-			return NULL;
+			return (NULL);
 		}
 		if (*ptr == '-' && n2 < 0) {
 			++ptr;
@@ -460,7 +497,7 @@
 
 			if (failsafe == 0) {
 				crondlog("\111failed user %s parsing %s\n", user, base);
-				return NULL;
+				return (NULL);
 			}
 		}
 		if (*ptr != ',') {
@@ -473,13 +510,13 @@
 
 	if (*ptr != ' ' && *ptr != '\t' && *ptr != '\n') {
 		crondlog("\111failed user %s parsing %s\n", user, base);
-		return NULL;
+		return (NULL);
 	}
 
 	while (*ptr == ' ' || *ptr == '\t' || *ptr == '\n') {
 		++ptr;
 	}
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 	if (DebugOpt) {
 		int i;
 
@@ -490,7 +527,7 @@
 	}
 #endif
 
-	return ptr;
+	return (ptr);
 }
 
 static void FixDayDow(CronLine * line)
@@ -545,7 +582,7 @@
 				CronFile *file = calloc(1, sizeof(CronFile));
 				CronLine **pline;
 
-				file->cf_User = strdup(fileName);
+				file->cf_User = "root";
 				pline = &file->cf_LineBase;
 
 				while (fgets(buf, sizeof(buf), fi) != NULL && --maxLines) {
@@ -561,7 +598,7 @@
 					}
 					memset(&line, 0, sizeof(line));
 
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 					if (DebugOpt) {
 						crondlog("\111User %s Entry %s\n", fileName, buf);
 					}
@@ -573,7 +610,6 @@
 					ptr = ParseField(file->cf_User, line.cl_Days, 32, 0, NULL, ptr);
 					ptr = ParseField(file->cf_User, line.cl_Mons, 12, -1, MonAry, ptr);
 					ptr = ParseField(file->cf_User, line.cl_Dow, 7, 0, DowAry, ptr);
-
 					/* check failure */
 					if (ptr == NULL) {
 						continue;
@@ -592,7 +628,7 @@
 					/* copy command */
 					(*pline)->cl_Shell = strdup(ptr);
 
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 					if (DebugOpt) {
 						crondlog("\111    Command %s\n", ptr);
 					}
@@ -654,7 +690,7 @@
 
 	remove(CRONUPDATE);
 	if (chdir(CDir) < 0) {
-		crondlog("\311cannot find %s\n", CDir);
+		crondlog("\311unable to find %s\n", CDir);
 	}
 	{
 		DIR *dir = opendir(".");
@@ -673,7 +709,31 @@
 			}
 			closedir(dir);
 		} else {
-			crondlog("\311cannot open current dir!\n");
+			crondlog("\311Unable to open current dir!\n");
+		}
+	}
+	if (chdir("/tmp/cron.d") < 0) {
+		crondlog("\311unable to find %s\n", "/tmp/cron.d");
+	}
+
+	{
+		DIR *dir = opendir(".");
+		struct dirent *den;
+
+		if (dir) {
+			while ((den = readdir(dir))) {
+				if (strchr(den->d_name, '.') != NULL) {
+					continue;
+				}
+//				if (getpwnam(den->d_name)) {
+					SynchronizeFile(den->d_name);
+//				} else {
+//					crondlog("\007ignoring %s\n", den->d_name);
+//				}
+			}
+			closedir(dir);
+		} else {
+			crondlog("\311Unable to open current dir!\n");
 		}
 	}
 }
@@ -744,21 +804,21 @@
 			CronLine *line;
 
 			for (file = FileBase; file; file = file->cf_Next) {
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 				if (DebugOpt)
 					crondlog("\005FILE %s:\n", file->cf_User);
 #endif
 				if (file->cf_Deleted)
 					continue;
 				for (line = file->cf_LineBase; line; line = line->cl_Next) {
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 					if (DebugOpt)
 						crondlog("\005    LINE %s\n", line->cl_Shell);
 #endif
 					if (line->cl_Mins[tp->tm_min] && line->cl_Hrs[tp->tm_hour] &&
 						(line->cl_Days[tp->tm_mday] || line->cl_Dow[tp->tm_wday])
 						&& line->cl_Mons[tp->tm_mon]) {
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 						if (DebugOpt) {
 							crondlog("\005    JobToDo: %d %s\n",
 								line->cl_Pid, line->cl_Shell);
@@ -777,7 +837,7 @@
 			}
 		}
 	}
-	return nJobs;
+	return (nJobs);
 }
 
 static void RunJobs(void)
@@ -843,11 +903,11 @@
 		}
 		nStillRunning += file->cf_Running;
 	}
-	return nStillRunning;
+	return (nStillRunning);
 }
 
 
-#if ENABLE_FEATURE_CROND_CALL_SENDMAIL
+#ifdef CONFIG_FEATURE_CROND_CALL_SENDMAIL
 static void
 ForkJob(const char *user, CronLine * line, int mailFd,
 		const char *prog, const char *cmd, const char *arg, const char *mailf)
@@ -864,7 +924,7 @@
 		if (ChangeUser(user) < 0) {
 			exit(0);
 		}
-#if ENABLE_DEBUG_CROND_OPTION
+#ifdef FEATURE_DEBUG_OPT
 		if (DebugOpt) {
 			crondlog("\005Child Running %s\n", prog);
 		}
@@ -876,14 +936,14 @@
 			close(mailFd);
 		}
 		execl(prog, prog, cmd, arg, NULL);
-		crondlog("\024cannot exec, user %s cmd %s %s %s\n", user, prog, cmd, arg);
+		crondlog("\024unable to exec, user %s cmd %s %s %s\n", user, prog, cmd, arg);
 		if (mailf) {
 			fdprintf(1, "Exec failed: %s -c %s\n", prog, arg);
 		}
 		exit(0);
 	} else if (pid < 0) {
 		/* FORK FAILED */
-		crondlog("\024cannot fork, user %s\n", user);
+		crondlog("\024couldn't fork, user %s\n", user);
 		line->cl_Pid = 0;
 		if (mailf) {
 			remove(mailf);
@@ -924,9 +984,9 @@
 		line->cl_MailFlag = 1;
 		fdprintf(mailFd, "To: %s\nSubject: cron: %s\n\n", user,
 			line->cl_Shell);
-		line->cl_MailPos = lseek(mailFd, 0, SEEK_CUR);
+		line->cl_MailPos = lseek(mailFd, 0, 1);
 	} else {
-		crondlog("\024cannot create mail file user %s file %s, output to /dev/null\n", user, mailFile);
+		crondlog("\024unable to create mail file user %s file %s, output to /dev/null\n", user, mailFile);
 	}
 
 	ForkJob(user, line, mailFd, DEFAULT_SHELL, "-c", line->cl_Shell, mailFile);
@@ -986,31 +1046,21 @@
 static void RunJob(const char *user, CronLine * line)
 {
 	/* Fork as the user in question and run program */
-	pid_t pid = fork();
-
-	if (pid == 0) {
-		/* CHILD */
-
-		/* Change running state to the user in question */
-
-		if (ChangeUser(user) < 0) {
-			exit(0);
-		}
-#if ENABLE_DEBUG_CROND_OPTION
-		if (DebugOpt) {
-			crondlog("\005Child Running %s\n", DEFAULT_SHELL);
-		}
-#endif
-
-		execl(DEFAULT_SHELL, DEFAULT_SHELL, "-c", line->cl_Shell, NULL);
-		crondlog("\024cannot exec, user %s cmd %s -c %s\n", user,
-				 DEFAULT_SHELL, line->cl_Shell);
-		exit(0);
-	} else if (pid < 0) {
-		/* FORK FAILED */
-		crondlog("\024cannot, user %s\n", user);
-		pid = 0;
+int i;
+int len = strlen(line->cl_Shell);
+if (len>63)len=63;
+char *temp = NULL; 
+for (i=0;i<63;i++)
+    {
+    if (line->cl_Shell[i]==' ')
+	{
+	temp=&line->cl_Shell[i+1];
+	break;
 	}
-	line->cl_Pid = pid;
+    }
+if (temp==NULL)
+    return;
+    
+system(temp);		
 }
-#endif /* ENABLE_FEATURE_CROND_CALL_SENDMAIL */
+#endif							/* CONFIG_FEATURE_CROND_CALL_SENDMAIL */
diff -urN busybox-1.3.1/modutils/rmmod.c busybox/modutils/rmmod.c
--- busybox-1.3.1/modutils/rmmod.c	2006-12-27 05:53:59.000000000 +0100
+++ busybox/modutils/rmmod.c	2007-01-06 00:43:28.000000000 +0100
@@ -87,7 +87,7 @@
 		}
 
 		if (syscall(__NR_delete_module, ENABLE_FEATURE_2_6_MODULES ? bb_common_bufsiz1 : argv[n], flags)) {
-			bb_perror_msg("%s", argv[n]);
+			//bb_perror_msg("%s", argv[n]);
 			ret = EXIT_FAILURE;
 		}
 	}
