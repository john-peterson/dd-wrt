--- main.c	2005-05-31 13:07:31.000000000 +0000
+++ ../../../../../DD-WRT1/src/router/ppp/pppoecd/main.c	2005-06-04 16:29:49.000000000 +0000
@@ -169,6 +169,11 @@
 
 extern	char	*ttyname __P((int));
 extern	char	*getlogin __P((void));
+
+#ifdef LOCAL_LOG
+int check_transferred_size(unsigned int, float *);
+#endif
+
 int main __P((int, char *[]));
 
 #ifdef ultrix
@@ -217,6 +222,8 @@
     char numbuf[16];
 
 #ifdef LOCAL_LOG
+    int size;
+    float bytes;
     FILE *fp;
 #endif
 
@@ -483,7 +490,44 @@
 
 #ifdef LOCAL_LOG
 	    if (fp) fprintf(fp, "Connect time %d.%d minutes.\n", t/10, t%10);
-	    if (fp) fprintf(fp, "Sent %u bytes, received %u bytes.\n\n",link_stats.bytes_out, link_stats.bytes_in);
+	    //if (fp) fprintf(fp, "Sent %u bytes, received %u bytes.\n\n",link_stats.bytes_out, link_stats.bytes_in);
+	    if (fp){
+		    fprintf(fp, "Received ");
+		    size = check_transferred_size(link_stats.bytes_in, &bytes);
+		    fprintf(fp, "%.1f ", bytes);
+		    switch (size){
+			    case 0:
+				    fprintf(fp, "bytes, ");
+				    break;
+			    case 1:
+				    fprintf(fp, "Kbytes, ");
+				    break;
+			    case 2:
+				    fprintf(fp, "Mbytes, ");
+				    break;
+			    case 3:
+				    fprintf(fp, "Gbytes, ");
+				    break;
+		    }
+		    fprintf(fp, "Sent ");
+		    size = check_transferred_size(link_stats.bytes_out, &bytes);
+		    fprintf(fp, "%.1f ", bytes);
+		    switch (size){
+			    case 0:
+				    fprintf(fp, "bytes");
+				    break;
+			    case 1:
+				    fprintf(fp, "Kbytes");
+				    break;
+                            case 2:
+				    fprintf(fp, "Mbytes");
+				    break;
+                            case 3:
+                                    fprintf(fp, "Gbytes");
+                                    break;
+		    }
+		    fprintf(fp, "\n\n");
+	    }
 #endif
 	    
 	}
@@ -571,6 +615,29 @@
     return 0;
 }
 
+#ifdef LOCAL_LOG
+int check_transferred_size(unsigned int bytes_transferred,float *bytes){
+        int i;
+        unsigned int size;
+
+        // Check for correct size
+        for( i = 3; i > 0; i--){
+                if (i == 3) size = 1073741824;   // Gbyte
+                else if (i == 2) size = 1048576; // Mbyte
+                else size = 1024;                // Kbyte
+                if ( bytes_transferred > size ){
+                        (*bytes) = (float) (bytes_transferred  / size);
+                        return i;
+                }
+        }
+
+        //If we arrive here it was transferred less than 1K
+        (*bytes) = (float) bytes_transferred;
+        return 0;
+}
+#endif
+
+
 /*
  * handle_events - wait for something to happen and respond to it.
  */
