# Midnight Commander 3.0 extension file
# Warning: Structure of this file has changed completely with version 3.0
#
# All lines starting with # or empty lines are thrown away.
# Lines starting in the first column should have following format:
#
# keyword/descNL, i.e. everything after keyword/ until new line is desc
#
# keyword can be:
#
#    shell (desc is, when starting with a dot, any extension (no wildcars),
#          i.e. matches all the files *desc . Example: .tar matches *.tar;
#          if it doesn't start with a dot, it matches only a file of that name)
#
#    regex (desc is an extended regular expression)
#          Please note that we are using the GNU regex library and thus
#          \| matches the literal | and | has special meaning (or) and
#          () have special meaning and \( \) stand for literal ( ).
#
#    type  (file matches this if `file %f` matches regular expression desc
#          (the filename: part from `file %f` is removed))
#
#    directory (matches any directory matching regular expression desc)
#
#    include (matches an include directive)
#
#    default (matches any file no matter what desc is)
#
# Other lines should start with a space or tab and should be in the format:
#
# keyword=commandNL (with no spaces around =), where keyword should be:
#
#    Open (if the user presses Enter or doubleclicks it),
#
#    View (F3), Edit (F4)
#
#    Include is the keyword used to add any further entries from an include/
#    section
#
# command is any one-line shell command, with the following substitutions:
#
# %% -> % character
# %p -> name of the current file (without path, but pwd is its path).
#       Also provided to external application as MC_EXT_BASENAME
#       global variable
# %f -> name of the current file. Unlike %p, if file is located on a
#	non-local virtual filesystem, i.e. either tarfs or ftpfs,
#	then the file will be temporarily copied into a local directory
#	and %f will be the full path to this local temporal file.
#	If you don't want to get a local copy and want to get the
#	virtual fs path (like /#ftp:ftp.cvut.cz/pub/hungry/xword), then
#	use %d/%p instead of %f.
#       Also provided to external application as MC_EXT_FILENAME
#       global variable
# %d -> name of the current directory (pwd, without trailing slash)
#       Also provided to external application as MC_EXT_CURRENTDIR
#       global variable
# %s -> "selected files", i.e. space separated list of tagged files if any
#       or name of the current file.
#       Also provided to external application as MC_EXT_SELECTED
#       global variable
# %t -> list of tagged files
#       Also provided to external application as MC_EXT_ONLYTAGGED
#       global variable
# %u -> list of tagged files (they'll be untaged after the command)
#
# (If these 6 letters are in uppercase, they refer to the other panel.
# But you shouldn't have to use it in this file.)
#
#
# %cd -> the rest is a path mc should change into (cd won't work, since it's
#	a child process).  %cd handles even vfs names.
#
# %view -> the command you type will be piped into mc's internal file viewer
#	if you type only the %view and no command, viewer will load %f file
#	instead (i.e. no piping, so it is different to %view cat %f)
#	%view may be directly followed by {} with a list of any of
#	ascii (Ascii mode), hex (Hex mode), nroff (color highlighting for
#	text using backspace for bold and underscore) and unform
#	(no highlighting for nroff sequences) separated by commas.
#
# %var -> You use it like this: %var{VAR:default}.  This macro will expand
#       to the value of the VAR variable in the environment if it's set
#       otherwise the value in default will be used.  This is similar to
#       the Bourne shell ${VAR-default} construct.
#
# Rules are applied from top to bottom, thus the order is important.
# If some actions are missing, search continues as if this target didn't
# match (i.e. if a file matches the first and second entry and View action
# is missing in the first one, then on pressing F3 the View action from
# the second entry will be used. default should catch all the actions.
#
# Any new entries you develop for you are always welcome if they are
# useful on more than one system.  You can post your modifications
# as tickets at www.midnight-commander.org


### Changes ###
#
# Reorganization: 2000-05-01 Michal Svec <rebel@penguin.cz>


### TODO ###
#
# Postscript	Open: ps2svga [gs -DEVICE=jpeg|zgv or something]
# Images		asciiview
#
# All X Apps	[Nothing/Warning] if no DISPLAY
# Not found	[Default/Warning]
# Empty Output	[Default/Warning]
# Edit:		CopyOut+EDIT+CopyIn
# Security	Check gzip/bzip EDIT (mktemp)
#
# Maybe:	Open/XOpen/GOpen/KOpen/... for Console/X/GNOME/KDE/etc.


### GIT Repo ###
# gitfs changeset
regex/^\[git\]
	Open=%cd %p/changesetfs://
	View=%cd %p/patchsetfs://

### Archives ###

# .tgz, .tpz, .tar.gz, .tar.z, .tar.Z, .ipk
regex/\.t([gp]?z|ar\.g?[zZ])$|\.ipk|\.gem$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.gz

regex/\.tar\.bz$
	# Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.bzip

regex/\.t(ar\.bz2|bz2?|b2)$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.bzip2

# .tar.lzma, .tlz
regex/\.t(ar\.lzma|lz)$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.lzma

# .tar.xz, .txz
regex/\.t(ar\.xz|xz)$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.xz

# .tar.F - used in QNX
regex/\.tar\.F$
	# Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.F

# .qpr/.qpk - QNX Neutrino package installer files
regex/\.(qp[rk])$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar.qpr

# tar
regex/\.(tar|TAR)$
	Open=%cd %p/utar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view tar

# lha
type/^LHa\ .*archive
	Open=%cd %p/ulha://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view lha

# arj
regex/\.a(rj|[0-9][0-9])$
	Open=%cd %p/uarj://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view arj

# cab
regex/\.([cC][aA][bB])$
	Open=%cd %p/ucab://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view cab

# ha
regex/\.([Hh][Aa])$
	Open=%cd %p/uha://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view ha

# rar
regex/\.[rR]([aA][rR]|[0-9][0-9])$
	Open=%cd %p/urar://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view rar

# ALZip
regex/\.(alz|ALZ)$
	Open=%cd %p/ualz://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view alz

# cpio
shell/.cpio.Z
	Open=%cd %p/ucpio://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view cpio.z

shell/.cpio.xz
	Open=%cd %p/ucpio://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view cpio.xz

shell/.cpio.gz
	Open=%cd %p/ucpio://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view cpio.gz

shell/.cpio
	Open=%cd %p/ucpio://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view cpio

# 7zip archives (they are not man pages)
regex/\.(7z|7Z)$
	Open=%cd %p/u7z://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view 7z

# patch
regex/\.(diff|patch)(\.bz2)$
	Open=%cd %p/patchfs://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view bz2

regex/\.(diff|patch)(\.(gz|Z))$
	Open=%cd %p/patchfs://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view gz

# ls-lR
regex/(^|\.)ls-?lR(\.gz|Z|bz2)$
	Open=%cd %p/lslR://

# trpm
regex/\.trpm$
	Open=%cd %p/trpm://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view trpm

# RPM packages (SuSE uses *.spm for source packages)
regex/\.(src\.rpm|spm)$
	Open=%cd %p/rpm://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view src.rpm

regex/\.rpm$
	Open=%cd %p/rpm://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view rpm

# deb
regex/\.u?deb$
	Open=%cd %p/deb://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view deb

# dpkg
shell/.debd
        Open=%cd %p/debd://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view debd

# apt
shell/.deba
        Open=%cd %p/deba://
	View=%view{ascii} @EXTHELPERSDIR@/package.sh view deba

# ISO9660
regex/\.([iI][sS][oO])$
	Open=%cd %p/iso9660://
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view iso9660


regex/\.(diff|patch)$
	Open=%cd %p/patchfs://
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view cat

# ar library
regex/\.s?a$
	Open=%cd %p/uar://
	#Open=%view{ascii} ar tv %f
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view ar

# gplib
regex/\.([Ll][Ii][Bb])$
	Open=%cd %p/ulib://
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view lib


# Mailboxes
type/^ASCII\ mail\ text
	Open=%cd %p/mailfs://


### Sources ###

# C
shell/.c
	Include=editor

# Fortran
shell/.f
	Include=editor

# Header
regex/\.(h|hpp)$
	Include=editor

# Asm
shell/.s
	Include=editor

# C++
regex/\.(C|cc|cpp)$
	Include=editor

include/editor
	Open=%var{EDITOR:vi} %f

# .so libraries
regex/\.(so|so\.[0-9\.]*)$
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view so

# Object
type/^ELF
	#Open=%var{PAGER:more} %f
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view elf

### Documentation ###

# Texinfo
#regex/\.(te?xi|texinfo)$

# GNU Info page
type/^Info\ text
 	Open=@EXTHELPERSDIR@/text.sh open info

shell/.info
	Open=@EXTHELPERSDIR@/text.sh open info

# Exception: .3gp are video files not manual pages
regex/\.(3[gG][pP])$
	Include=video

# Manual page
regex/(([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])|\.man)$
	Open=@EXTHELPERSDIR@/text.sh open man %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man %var{PAGER:more}

# Perl pod page
shell/.pod
	Open=@EXTHELPERSDIR@/text.sh open pod %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view pod %var{PAGER:more}

# Troff with me macros.
# Exception - "read.me" is not a nroff file.
shell/read.me
	Open=
	View=

shell/.me
	Open=@EXTHELPERSDIR@/text.sh open nroff.me %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view nroff.me %var{PAGER:more}

# Troff with ms macros.
shell/.ms
	Open=@EXTHELPERSDIR@/text.sh open nroff.ms %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view nroff.ms %var{PAGER:more}

# Manual page - compressed
regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.g?[Zz]$
	Open=@EXTHELPERSDIR@/text.sh open man.gz %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man.gz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz$
	Open=@EXTHELPERSDIR@/text.sh open man.bz %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man.bz %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.bz2$
	Open=@EXTHELPERSDIR@/text.sh open man.bz2 %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man.bz2 %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.lzma$
	Open=@EXTHELPERSDIR@/text.sh open man.lzma %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man.lzma %var{PAGER:more}

regex/([^0-9]|^[^\.]*)\.([1-9][A-Za-z]*|[ln])\.xz$
	Open=@EXTHELPERSDIR@/text.sh open man.xz %var{PAGER:more}
	View=%view{ascii,nroff} @EXTHELPERSDIR@/text.sh view man.xz %var{PAGER:more}

# CHM
regex/\.(chm|CHM)$
	Open=@EXTHELPERSDIR@/text.sh open chm

### Images ###

type/^GIF
	Include=image

type/^JPEG
	View=%view{ascii} @EXTHELPERSDIR@/image.sh view jpeg
	Include=image

type/^PC\ bitmap
	Include=image

type/^PNG
	Include=image

type/^TIFF
	Include=image

type/^PBM
	Include=image

type/^PGM
	Include=image

type/^PPM
	Include=image

type/^Netpbm
	Include=image

shell/.xcf
	Open=@EXTHELPERSDIR@/image.sh open xcf

shell/.xbm
	Open=@EXTHELPERSDIR@/image.sh open xbm

shell/.xpm
	Include=image
	View=@EXTHELPERSDIR@/image.sh view xpm %f

shell/.ico
	Include=image

include/image
	Open=@EXTHELPERSDIR@/image.sh open ALL_FORMATS
	View=%view{ascii} @EXTHELPERSDIR@/image.sh view ALL_FORMATS


### Sound files ###

regex/\.([wW][aA][vV]|[sS][nN][dD]|[vV][oO][cC]|[aA][uU]|[sS][mM][pP]|[aA][iI][fF][fF]|[sS][nN][dD])$
	Open=@EXTHELPERSDIR@/sound.sh open common

regex/\.([mM][oO][dD]|[sS]3[mM]|[xX][mM]|[iI][tT]|[mM][tT][mM]|669|[sS][tT][mM]|[uU][lL][tT]|[fF][aA][rR])$
	Open=@EXTHELPERSDIR@/sound.sh open mod

regex/\.([wW][aA][wW]22)$
	Open=@EXTHELPERSDIR@/sound.sh open wav22

regex/\.([mM][pP]3)$
	Open=@EXTHELPERSDIR@/sound.sh open mp3
	View=%view{ascii} @EXTHELPERSDIR@/sound.sh view mp3

regex/\.([oO][gG][gG|aA|vV|xX])$
	Open=@EXTHELPERSDIR@/sound.sh open ogg
	View=%view{ascii} @EXTHELPERSDIR@/sound.sh view ogg

regex/\.([sS][pP][xX]|[fF][lL][aA][cC])$
	Open=@EXTHELPERSDIR@/sound.sh open common

regex/\.([mM][iI][dD][iI]?|[rR][mM][iI][dD]?)$
	Open=@EXTHELPERSDIR@/sound.sh open midi

regex/\.([wW][mM][aA])$
	Open=@EXTHELPERSDIR@/sound.sh open wma
	View=%view{ascii} @EXTHELPERSDIR@/sound.sh view wma


### Play lists ###

regex/\.([mM]3[uU]|[pP][lL][sS])$
	Open=@EXTHELPERSDIR@/sound.sh open playlist


### Video ###

regex/\.([aA][vV][iI])$
	Include=video

regex/\.([aA][sS][fFxX])$
	Include=video

regex/\.([dD][iI][vV][xX])$
	Include=video

regex/\.([mM][kK][vV])$
	Include=video

regex/\.([mM][oO][vV]|[qQ][tT])$
	Include=video

regex/\.([mM][pP]4|[mM]4[vV]|[mM][pP][eE]?[gG])$
	Include=video

# MPEG-2 TS container + H.264 codec
regex/\.([mM][tT][sS])$
	Include=video

regex/\.([tT][sS])$
	Include=video

regex/\.([vV][oO][bB])$
	Include=video

regex/\.([wW][mM][vV])$
	Include=video

regex/\.([fF][lL][iIcCvV])$
	Include=video

regex/\.([oO][gG][mM])$
	Include=video

regex/\.([rR][aA]?[mM])$
	Open=@EXTHELPERSDIR@/video.sh open ram

# WebM
regex/\.([wW][eE][bB][mM])$
    Include=video

type/WebM
    Include=video

include/video
	Open=@EXTHELPERSDIR@/video.sh open ALL_FORMATS
	View=%view{ascii} @EXTHELPERSDIR@/video.sh view ALL_FORMATS


### Documents ###

# Postscript
type/^PostScript
	Open=@EXTHELPERSDIR@/doc.sh open ps
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view ps

# PDF
type/^PDF
	Open=@EXTHELPERSDIR@/doc.sh open pdf
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view pdf

# html
regex/\.([hH][tT][mM][lL]?)$
	Open=@EXTHELPERSDIR@/web.sh open html
	View=%view{ascii} @EXTHELPERSDIR@/web.sh view html

# StarOffice 5.2
shell/.sdw
	Open=@EXTHELPERSDIR@/doc.sh open ooffice

# StarOffice 6 and OpenOffice.org formats
regex/\.(odt|ott|sxw|stw|ods|ots|sxc|stc|odp|otp|sxi|sti|odg|otg|sxd|std|odb|odf|sxm|odm|sxg)$
	Open=@EXTHELPERSDIR@/doc.sh open ooffice
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view odt

# AbiWord
shell/.abw
	Open=@EXTHELPERSDIR@/doc.sh open abw

# Microsoft Word Document
regex/\.([Dd][oO][cCtT]|[Ww][rR][iI])$
	Open=@EXTHELPERSDIR@/doc.sh open msdoc
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view msdoc
type/^Microsoft\ Word
	Open=@EXTHELPERSDIR@/doc.sh open msdoc
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view msdoc

# RTF document
regex/\.([rR][tT][fF])$
	Open=@EXTHELPERSDIR@/doc.sh open msdoc

# Microsoft Excel Worksheet
regex/\.([xX][lL][sSwW])$
	Open=@EXTHELPERSDIR@/doc.sh open msxls
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view msxls
type/^Microsoft\ Excel
	Open=@EXTHELPERSDIR@/doc.sh open msxls
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view msxls

# Use OpenOffice.org to open any MS Office documents
type/^Microsoft\ Office\ Document
	Open=@EXTHELPERSDIR@/doc.sh open ooffice

# Framemaker
type/^FrameMaker
	Open=@EXTHELPERSDIR@/doc.sh open framemaker

# DVI
regex/\.([dD][vV][iI])$
	Open=@EXTHELPERSDIR@/doc.sh open dvi
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view dvi

# TeX
regex/\.([Tt][Ee][Xx])$
	Include=editor

# DjVu
regex/\.(djvu?|DJVU?)$
	Open=@EXTHELPERSDIR@/doc.sh open djvu
	View=%view{ascii} @EXTHELPERSDIR@/doc.sh view djvu

### Miscellaneous ###

# Makefile
regex/[Mm]akefile$
	Open=make -f %f %{Enter parameters}

# Imakefile
shell/Imakefile
	Open=@EXTHELPERSDIR@/misc.sh open imakefile

# Makefile.PL (MakeMaker)
regex/^Makefile.(PL|pl)$
	Open=%var{PERL:perl} %f

# dbf
regex/\.([dD][bB][fF])$
	Open=%view{ascii} @EXTHELPERSDIR@/misc.sh open dbf
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view dbf

# REXX script
regex/\.(rexx?|cmd)$
       Open=rexx %f %{Enter parameters};echo "Press ENTER";read y

# Disk images for Commodore computers (VIC20, C64, C128)
regex/\.(d64|D64)$
	Open=%cd %p/uc1541://
	View=%view{ascii} c1541 %f -list
	Extract=c1541 %f -extract

# Glade, a user interface designer for GTK+ and GNOME
regex/\.([Gg][Ll][Aa][Dd][Ee])$
	Open=@EXTHELPERSDIR@/misc.sh open glade

# Gettext Catalogs
shell/.mo
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view mo

# lyx
regex/\.(lyx|LYX)$
	Open=@EXTHELPERSDIR@/misc.sh open lyx
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view lyx

# torrent
regex/\.([tT][oO][rR][rR][eE][nN][tT])$
	View=%view{ascii} @EXTHELPERSDIR@/misc.sh view torrent

### Plain compressed files ###

# ace
regex/\.(ace|ACE)$
	Open=%cd %p/uace://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view ace
	Extract=unace x %f

# arc
regex/\.(arc|ARC)$
	Open=%cd %p/uarc://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view arc
	Extract=arc x %f '*'
	Extract (with flags)=I=%{Enter any Arc flags:}; if test -n "$I"; then arc x $I %f; fi

# zip
type/^([Zz][Ii][Pp])\ archive
	Open=%cd %p/uzip://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view zip

# zoo
regex/\.([Zz][Oo][Oo])$
	Open=%cd %p/uzoo://
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view zoo

# gzip
type/^gzip
	Open=@EXTHELPERSDIR@/archive.sh view gz %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view gz

regex/\.(gz|Z)$
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view gz

# bzip2
type/^bzip2
	Open=@EXTHELPERSDIR@/archive.sh view bzip2 %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view bz2

regex/\.bz2?$
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view bz2

# bzip
type/^bzip
	Open=@EXTHELPERSDIR@/archive.sh view bzip %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view bzip

# compress
type/^compress
	Open=@EXTHELPERSDIR@/archive.sh view gz %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view gz

# lzma
regex/\.lzma$
	Open=@EXTHELPERSDIR@/archive.sh view lzma %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view lzma

# xz
regex/\.xz$
	Open=@EXTHELPERSDIR@/archive.sh view xz %var{PAGER:more}
	View=%view{ascii} @EXTHELPERSDIR@/archive.sh view xz

### Default ###

# Default target for anything not described above
default/*
	Open=
	View=


### EOF ###
